import {respond} from "@sveltejs/kit/ssr";
import {create_ssr_component, validate_component, missing_component, escape, subscribe, set_store_value, each, add_attribute} from "svelte/internal";
import {setContext, afterUpdate, onMount, getContext, createEventDispatcher} from "svelte";
import "js-cookie";
import {getApps, initializeApp} from "firebase/app";
import {getAuth, onAuthStateChanged} from "firebase/auth";
import {getFirestore, query, collection, where, getDocs} from "firebase/firestore";
import "@firebase/auth";
import {format, startOfWeek, endOfWeek} from "date-fns";
import "svelte/transition";
import {writable} from "svelte/store";
var root_svelte_svelte_type_style_lang = "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}";
const css$e = {
  code: "#svelte-announcer.svelte-1pdgbjn{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}",
  map: `{"version":3,"file":"root.svelte","sources":["root.svelte"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit \u2014 do not edit it! -->\\n<script>\\n\\timport { setContext, afterUpdate, onMount } from 'svelte';\\n\\n\\t// stores\\n\\texport let stores;\\n\\texport let page;\\n\\n\\texport let components;\\n\\texport let props_0 = null;\\n\\texport let props_1 = null;\\n\\texport let props_2 = null;\\n\\n\\tsetContext('__svelte__', stores);\\n\\n\\t$: stores.page.set(page);\\n\\tafterUpdate(stores.page.notify);\\n\\n\\tlet mounted = false;\\n\\tlet navigated = false;\\n\\tlet title = null;\\n\\n\\tonMount(() => {\\n\\t\\tconst unsubscribe = stores.page.subscribe(() => {\\n\\t\\t\\tif (mounted) {\\n\\t\\t\\t\\tnavigated = true;\\n\\t\\t\\t\\ttitle = document.title || 'untitled page';\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tmounted = true;\\n\\t\\treturn unsubscribe;\\n\\t});\\n</script>\\n\\n<svelte:component this={components[0]} {...(props_0 || {})}>\\n\\t{#if components[1]}\\n\\t\\t<svelte:component this={components[1]} {...(props_1 || {})}>\\n\\t\\t\\t{#if components[2]}\\n\\t\\t\\t\\t<svelte:component this={components[2]} {...(props_2 || {})}/>\\n\\t\\t\\t{/if}\\n\\t\\t</svelte:component>\\n\\t{/if}\\n</svelte:component>\\n\\n{#if mounted}\\n\\t<div id=\\"svelte-announcer\\" aria-live=\\"assertive\\" aria-atomic=\\"true\\">\\n\\t\\t{#if navigated}\\n\\t\\t\\t{title}\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>#svelte-announcer{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;left:0;overflow:hidden;position:absolute;top:0;white-space:nowrap;width:1px}</style>"],"names":[],"mappings":"AAqDO,gCAAiB,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,MAAM,GAAG,CAAC,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,SAAS,MAAM,CAAC,SAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,YAAY,MAAM,CAAC,MAAM,GAAG,CAAC"}`
};
const Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {stores} = $$props;
  let {page} = $$props;
  let {components} = $$props;
  let {props_0 = null} = $$props;
  let {props_1 = null} = $$props;
  let {props_2 = null} = $$props;
  setContext("__svelte__", stores);
  afterUpdate(stores.page.notify);
  let mounted = false;
  let navigated = false;
  let title = null;
  onMount(() => {
    const unsubscribe = stores.page.subscribe(() => {
      if (mounted) {
        navigated = true;
        title = document.title || "untitled page";
      }
    });
    mounted = true;
    return unsubscribe;
  });
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page !== void 0)
    $$bindings.page(page);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.props_0 === void 0 && $$bindings.props_0 && props_0 !== void 0)
    $$bindings.props_0(props_0);
  if ($$props.props_1 === void 0 && $$bindings.props_1 && props_1 !== void 0)
    $$bindings.props_1(props_1);
  if ($$props.props_2 === void 0 && $$bindings.props_2 && props_2 !== void 0)
    $$bindings.props_2(props_2);
  $$result.css.add(css$e);
  {
    stores.page.set(page);
  }
  return `


${validate_component(components[0] || missing_component, "svelte:component").$$render($$result, Object.assign(props_0 || {}), {}, {
    default: () => `${components[1] ? `${validate_component(components[1] || missing_component, "svelte:component").$$render($$result, Object.assign(props_1 || {}), {}, {
      default: () => `${components[2] ? `${validate_component(components[2] || missing_component, "svelte:component").$$render($$result, Object.assign(props_2 || {}), {}, {})}` : ``}`
    })}` : ``}`
  })}

${mounted ? `<div id="${"svelte-announcer"}" aria-live="${"assertive"}" aria-atomic="${"true"}" class="${"svelte-1pdgbjn"}">${navigated ? `${escape(title)}` : ``}</div>` : ``}`;
});
function set_paths(paths) {
}
function set_prerendering(value) {
}
var user_hooks = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module"
});
const template = ({head, body}) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<link rel="icon" href="/favicon.ico" />\n\n		<link rel="preconnect" href="https://fonts.gstatic.com">\n		<link href="https://fonts.googleapis.com/css2?family=Teko:wght@300;400;500;600;700&display=swap" rel="stylesheet">\n\n		\n		<meta name="viewport" content="width=device-width, initial-scale=1" />\n		' + head + '\n	</head>\n	<body>\n		<div id="svelte">' + body + "</div>\n	</body>\n</html>\n";
let options = null;
function init(settings) {
  set_paths(settings.paths);
  set_prerendering(settings.prerendering || false);
  options = {
    amp: false,
    dev: false,
    entry: {
      file: "/./_app/start-3ba165c6.js",
      css: ["/./_app/assets/start-0826e215.css", "/./_app/assets/vendor-d4876607.css"],
      js: ["/./_app/start-3ba165c6.js", "/./_app/chunks/vendor-ce82561a.js", "/./_app/chunks/singletons-bb9012b7.js"]
    },
    fetched: void 0,
    floc: false,
    get_component_path: (id) => "/./_app/" + entry_lookup[id],
    get_stack: (error2) => String(error2),
    handle_error: (error2) => {
      console.error(error2.stack);
      error2.stack = options.get_stack(error2);
    },
    hooks: get_hooks(user_hooks),
    hydrate: true,
    initiator: void 0,
    load_component,
    manifest,
    paths: settings.paths,
    read: settings.read,
    root: Root,
    router: true,
    ssr: true,
    target: "#svelte",
    template
  };
}
const empty = () => ({});
const manifest = {
  assets: [],
  layout: "src/routes/__layout.svelte",
  error: ".svelte-kit/build/components/error.svelte",
  routes: [
    {
      type: "page",
      pattern: /^\/$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/dashboard\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/dashboard/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/register\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/register/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    },
    {
      type: "page",
      pattern: /^\/login\/?$/,
      params: empty,
      a: ["src/routes/__layout.svelte", "src/routes/login/index.svelte"],
      b: [".svelte-kit/build/components/error.svelte"]
    }
  ]
};
const get_hooks = (hooks) => ({
  getSession: hooks.getSession || (() => ({})),
  handle: hooks.handle || (({request, render: render2}) => render2(request))
});
const module_lookup = {
  "src/routes/__layout.svelte": () => Promise.resolve().then(function() {
    return __layout;
  }),
  ".svelte-kit/build/components/error.svelte": () => Promise.resolve().then(function() {
    return error;
  }),
  "src/routes/index.svelte": () => Promise.resolve().then(function() {
    return index$3;
  }),
  "src/routes/dashboard/index.svelte": () => Promise.resolve().then(function() {
    return index$2;
  }),
  "src/routes/register/index.svelte": () => Promise.resolve().then(function() {
    return index$1;
  }),
  "src/routes/login/index.svelte": () => Promise.resolve().then(function() {
    return index;
  })
};
const metadata_lookup = {"src/routes/__layout.svelte": {entry: "/./_app/pages/__layout.svelte-d0913c1d.js", css: ["/./_app/assets/pages/__layout.svelte-1a74d921.css", "/./_app/assets/vendor-d4876607.css"], js: ["/./_app/pages/__layout.svelte-d0913c1d.js", "/./_app/chunks/vendor-ce82561a.js", "/./_app/chunks/stores-62b324a6.js"], styles: null}, ".svelte-kit/build/components/error.svelte": {entry: "/./_app/error.svelte-d0609c39.js", css: ["/./_app/assets/vendor-d4876607.css"], js: ["/./_app/error.svelte-d0609c39.js", "/./_app/chunks/vendor-ce82561a.js"], styles: null}, "src/routes/index.svelte": {entry: "/./_app/pages/index.svelte-a81ac6f1.js", css: ["/./_app/assets/vendor-d4876607.css"], js: ["/./_app/pages/index.svelte-a81ac6f1.js", "/./_app/chunks/vendor-ce82561a.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-62b324a6.js"], styles: null}, "src/routes/dashboard/index.svelte": {entry: "/./_app/pages/dashboard/index.svelte-648e7aac.js", css: ["/./_app/assets/pages/dashboard/index.svelte-609861fa.css", "/./_app/assets/vendor-d4876607.css"], js: ["/./_app/pages/dashboard/index.svelte-648e7aac.js", "/./_app/chunks/vendor-ce82561a.js", "/./_app/chunks/stores-62b324a6.js"], styles: null}, "src/routes/register/index.svelte": {entry: "/./_app/pages/register/index.svelte-e9db1a5a.js", css: ["/./_app/assets/pages/register/index.svelte-5d556980.css", "/./_app/assets/vendor-d4876607.css"], js: ["/./_app/pages/register/index.svelte-e9db1a5a.js", "/./_app/chunks/vendor-ce82561a.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-62b324a6.js"], styles: null}, "src/routes/login/index.svelte": {entry: "/./_app/pages/login/index.svelte-dc5b5de8.js", css: ["/./_app/assets/pages/register/index.svelte-5d556980.css", "/./_app/assets/vendor-d4876607.css"], js: ["/./_app/pages/login/index.svelte-dc5b5de8.js", "/./_app/chunks/vendor-ce82561a.js", "/./_app/chunks/navigation-20968cc5.js", "/./_app/chunks/singletons-bb9012b7.js", "/./_app/chunks/stores-62b324a6.js"], styles: null}};
async function load_component(file) {
  return {
    module: await module_lookup[file](),
    ...metadata_lookup[file]
  };
}
init({paths: {base: "", assets: "/."}});
function render(request, {
  prerender
} = {}) {
  const host = request.headers["host"];
  return respond({...request, host}, options, {prerender});
}
var app = "/*! tailwindcss v2.1.2 | MIT License | https://tailwindcss.com*/\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-text-size-adjust:100%}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}*{--tw-shadow:0 0 transparent;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.absolute{position:absolute}.fixed{position:fixed}.relative{position:relative}.right-0{right:0}.top-0{top:0}.z-20{z-index:20}.mx-auto{margin-left:auto;margin-right:auto}.mb-3{margin-bottom:.75rem}.mb-20{margin-bottom:5rem}.mb-4{margin-bottom:1rem}.mb-6{margin-bottom:1.5rem}.mt-2{margin-top:.5rem}.mb-5{margin-bottom:1.25rem}.flex{display:flex}.grid{display:grid}.hidden{display:none}.h-screen{height:100vh}.w-full{width:100%}.max-w-3xl{max-width:48rem}.max-w-sm{max-width:24rem}.max-w-5xl{max-width:64rem}.flex-1{flex:1 1 0%}.grid-cols-5{grid-template-columns:repeat(5,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.items-center{align-items:center}.justify-between{justify-content:space-between}.justify-center{justify-content:center}.gap-3{gap:.75rem}.rounded-lg{border-radius:.5rem}.rounded{border-radius:.25rem}.rounded-xl{border-radius:.75rem}.rounded-full{border-radius:9999px}.border{border-width:1px}.border-2{border-width:2px}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-black{--tw-border-opacity:1;border-color:rgba(0,0,0,var(--tw-border-opacity))}.bg-black{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.p-8{padding:2rem}.p-2{padding:.5rem}.p-5{padding:1.25rem}.p-10{padding:2.5rem}.py-20{padding-bottom:5rem;padding-top:5rem}.px-8{padding-left:2rem;padding-right:2rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.px-10{padding-left:2.5rem;padding-right:2.5rem}.py-10{padding-bottom:2.5rem;padding-top:2.5rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-8{padding-bottom:2rem;padding-top:2rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.pt-28{padding-top:7rem}.pb-20{padding-bottom:5rem}.text-center{text-align:center}.text-2xl{font-size:1.5rem;line-height:2rem}.text-base{font-size:1rem;line-height:1.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-5xl{font-size:3rem;line-height:1}.font-bold{font-weight:700}.font-light{font-weight:300}.font-medium{font-weight:500}.font-normal{font-weight:400}.uppercase{text-transform:uppercase}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.opacity-50{opacity:.5}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px rgba(0,0,0,0.06);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration,.transition-all{transition-duration:.15s}.duration-200{transition-duration:.2s}html{background:#0b0c10}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}";
const ssr = typeof window === "undefined";
const getStores = () => {
  const stores = getContext("__svelte__");
  return {
    page: {
      subscribe: stores.page.subscribe
    },
    navigating: {
      subscribe: stores.navigating.subscribe
    },
    get preloading() {
      console.error("stores.preloading is deprecated; use stores.navigating instead");
      return {
        subscribe: stores.navigating.subscribe
      };
    },
    session: stores.session
  };
};
const error$1 = (verb) => {
  throw new Error(ssr ? `Can only ${verb} session store in browser` : `Cannot ${verb} session store before subscribing`);
};
const session = {
  subscribe(fn) {
    const store = getStores().session;
    if (!ssr) {
      session.set = store.set;
      session.update = store.update;
    }
    return store.subscribe(fn);
  },
  set: (value) => {
    error$1("set");
  },
  update: (updater) => {
    error$1("update");
  }
};
var Nav_svelte_svelte_type_style_lang = "nav.svelte-tyrqwg{background-color:#0b0c10;border-bottom:1px solid #1f2833;z-index:999}p.svelte-tyrqwg{color:#66fcf1;flex:1 1 0%;font-size:1.125rem;font-weight:700;line-height:1.75rem}ul.svelte-tyrqwg{align-items:center;display:flex;flex-direction:row;justify-content:flex-end}li.svelte-tyrqwg{font-size:.875rem;font-weight:400;line-height:1.25rem;margin-left:1.25rem;margin-right:1.25rem;text-transform:uppercase}a.svelte-tyrqwg{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));transition-duration:.15s;transition-duration:.2s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}a.svelte-tyrqwg:hover{color:#66fcf1}";
const css$d = {
  code: "nav.svelte-tyrqwg{background-color:#0b0c10;border-bottom:1px solid #1f2833;z-index:999}p.svelte-tyrqwg{color:#66fcf1;flex:1 1 0%;font-size:1.125rem;font-weight:700;line-height:1.75rem}ul.svelte-tyrqwg{align-items:center;display:flex;flex-direction:row;justify-content:flex-end}li.svelte-tyrqwg{font-size:.875rem;font-weight:400;line-height:1.25rem;margin-left:1.25rem;margin-right:1.25rem;text-transform:uppercase}a.svelte-tyrqwg{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));transition-duration:.15s;transition-duration:.2s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}a.svelte-tyrqwg:hover{color:#66fcf1}",
  map: `{"version":3,"file":"Nav.svelte","sources":["Nav.svelte"],"sourcesContent":["<script>\\n  import { goto } from \\"$app/navigation\\";\\n  import { session } from \\"$app/stores\\";\\n  import { getAuth, signOut } from \\"firebase/auth\\";\\n\\n  // Props\\n  export let user;\\n\\n  // Functions\\n  async function handleLogout() {\\n    const auth = await getAuth();\\n    signOut(auth)\\n      .then(() => {\\n        console.log(\\"Sign out successful\\");\\n      })\\n      .catch((error) => {\\n        console.log(error);\\n      });\\n  }\\n</script>\\n\\n<nav\\n  class=\\"fixed w-full p-5 flex flex-row justify-between items-center shadow-md {user\\n    ? ''\\n    : 'hidden'}\\"\\n>\\n  <p>Ride Share Stats</p>\\n  <ul>\\n    {#if user}\\n      <li>\\n        <a sveltekit:prefetch href=\\"/\\">Home</a>\\n      </li>\\n      <li>\\n        <a sveltekit:prefetch href=\\"dashboard\\">Dashboard</a>\\n      </li>\\n      <!-- <li>\\n        <a sveltekit:prefetch href=\\"shifts\\">Shifts</a>\\n      </li>\\n      <li>\\n        <a sveltekit:prefetch href=\\"settings\\">Settings</a>\\n      </li> -->\\n      <li>\\n        <a href=\\".\\" on:click|preventDefault={handleLogout}>Logout</a>\\n      </li>\\n    {:else}\\n      <li>\\n        <a sveltekit:prefetch href=\\"register\\">Register</a>\\n      </li>\\n      <li>\\n        <a sveltekit:prefetch href=\\"login\\">Login</a>\\n      </li>\\n    {/if}\\n  </ul>\\n</nav>\\n\\n<style>nav{background-color:#0b0c10;border-bottom:1px solid #1f2833;z-index:999}p{color:#66fcf1;flex:1 1 0%;font-size:1.125rem;font-weight:700;line-height:1.75rem}ul{align-items:center;display:flex;flex-direction:row;justify-content:flex-end}li{font-size:.875rem;font-weight:400;line-height:1.25rem;margin-left:1.25rem;margin-right:1.25rem;text-transform:uppercase}a{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));transition-duration:.15s;transition-duration:.2s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}a:hover{color:#66fcf1}</style>\\n"],"names":[],"mappings":"AAuDO,iBAAG,CAAC,iBAAiB,OAAO,CAAC,cAAc,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,eAAC,CAAC,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,QAAQ,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,gBAAE,CAAC,YAAY,MAAM,CAAC,QAAQ,IAAI,CAAC,eAAe,GAAG,CAAC,gBAAgB,QAAQ,CAAC,gBAAE,CAAC,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,YAAY,OAAO,CAAC,aAAa,OAAO,CAAC,eAAe,SAAS,CAAC,eAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,oBAAoB,IAAI,CAAC,oBAAoB,GAAG,CAAC,oBAAoB,GAAG,CAAC,2BAA2B,aAAa,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,eAAC,MAAM,CAAC,MAAM,OAAO,CAAC"}`
};
const Nav = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {user} = $$props;
  if ($$props.user === void 0 && $$bindings.user && user !== void 0)
    $$bindings.user(user);
  $$result.css.add(css$d);
  return `<nav class="${"fixed w-full p-5 flex flex-row justify-between items-center shadow-md " + escape(user ? "" : "hidden") + " svelte-tyrqwg"}"><p class="${"svelte-tyrqwg"}">Ride Share Stats</p>
  <ul class="${"svelte-tyrqwg"}">${user ? `<li class="${"svelte-tyrqwg"}"><a sveltekit:prefetch href="${"/"}" class="${"svelte-tyrqwg"}">Home</a></li>
      <li class="${"svelte-tyrqwg"}"><a sveltekit:prefetch href="${"dashboard"}" class="${"svelte-tyrqwg"}">Dashboard</a></li>
      
      <li class="${"svelte-tyrqwg"}"><a href="${"."}" class="${"svelte-tyrqwg"}">Logout</a></li>` : `<li class="${"svelte-tyrqwg"}"><a sveltekit:prefetch href="${"register"}" class="${"svelte-tyrqwg"}">Register</a></li>
      <li class="${"svelte-tyrqwg"}"><a sveltekit:prefetch href="${"login"}" class="${"svelte-tyrqwg"}">Login</a></li>`}</ul>
</nav>`;
});
const _layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $session, $$unsubscribe_session;
  $$unsubscribe_session = subscribe(session, (value) => $session = value);
  let hasUser = false;
  let apps = getApps();
  if (apps.length === 0) {
    initializeApp({
      apiKey: "AIzaSyDgyYBEHnbkQZrDuRHQjo21bjn3KY8RiVA",
      authDomain: "ride-share-app-5938e.firebaseapp.com",
      projectId: "ride-share-app-5938e",
      storageBucket: "ride-share-app-5938e.appspot.com",
      messagingSenderId: "854596678112",
      appId: "1:854596678112:web:b2bb3244ff27ed74127b85"
    });
  }
  onMount(async () => {
    const auth = await getAuth();
    await onAuthStateChanged(auth, async (user) => {
      if (user) {
        set_store_value(session, $session.user = user.uid, $session);
        hasUser = true;
      } else {
        set_store_value(session, $session.user = false, $session);
        hasUser = false;
        return;
      }
    });
  });
  $$unsubscribe_session();
  return `${validate_component(Nav, "Nav").$$render($$result, {user: hasUser}, {}, {})}

${slots.default ? slots.default({}) : ``}`;
});
var __layout = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: _layout
});
function load$4({error: error2, status}) {
  return {props: {error: error2, status}};
}
const Error$1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {status} = $$props;
  let {error: error2} = $$props;
  if ($$props.status === void 0 && $$bindings.status && status !== void 0)
    $$bindings.status(status);
  if ($$props.error === void 0 && $$bindings.error && error2 !== void 0)
    $$bindings.error(error2);
  return `<h1>${escape(status)}</h1>

<p>${escape(error2.message)}</p>


${error2.stack ? `<pre>${escape(error2.stack)}</pre>` : ``}`;
});
var error = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Error$1,
  load: load$4
});
async function load$3({session: session2}) {
  let {user} = session2;
  if (!user) {
    return {status: 302, redirect: "login"};
  }
  return {};
}
const Routes = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_session;
  $$unsubscribe_session = subscribe(session, (value) => value);
  $$unsubscribe_session();
  return `<div class="${"w-full max-w-3xl mx-auto py-20"}"><a class="${"text-white"}" href="${"."}">Logout</a></div>`;
});
var index$3 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Routes,
  load: load$3
});
const currentWeekShifts = writable([]);
const customCurrentWeekShiftsStore = {
  subscribe: currentWeekShifts.subscribe,
  setCurrentWeekShifts: (shiftArray) => {
    currentWeekShifts.set(shiftArray);
  },
  addCurrentWeekShift: (shiftData) => {
    const newShift = {
      ...shiftData
    };
    currentWeekShifts.update((items) => {
      return [...items, newShift];
    });
  }
};
var StatBox_svelte_svelte_type_style_lang = ".box.svelte-17l3umk{align-items:center;background-color:#1f2833;border-color:#1f2833;border-radius:.25rem;border-width:2px;display:flex;flex-direction:column;justify-content:center;padding:2rem 1.5rem}h3.svelte-17l3umk{color:#66fcf1;font-size:1.25rem;font-weight:300;letter-spacing:.025em;line-height:1.75rem;margin-top:.5rem;opacity:.5;text-transform:uppercase}h3.svelte-17l3umk,p.svelte-17l3umk{font-family:Teko,sans-serif;text-align:center}p.svelte-17l3umk{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:3rem;font-weight:700;line-height:1}";
const css$c = {
  code: ".box.svelte-17l3umk{align-items:center;background-color:#1f2833;border-color:#1f2833;border-radius:.25rem;border-width:2px;display:flex;flex-direction:column;justify-content:center;padding:2rem 1.5rem}h3.svelte-17l3umk{color:#66fcf1;font-size:1.25rem;font-weight:300;letter-spacing:.025em;line-height:1.75rem;margin-top:.5rem;opacity:.5;text-transform:uppercase}h3.svelte-17l3umk,p.svelte-17l3umk{font-family:Teko,sans-serif;text-align:center}p.svelte-17l3umk{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:3rem;font-weight:700;line-height:1}",
  map: '{"version":3,"file":"StatBox.svelte","sources":["StatBox.svelte"],"sourcesContent":["<script>\\n  // Props\\n  export let title = \\"Gas Price\\";\\n  export let value = 3.22;\\n  export let isDollarValue = false;\\n</script>\\n\\n<div class=\\"box\\">\\n  <p><span class=\\"font-light\\">{isDollarValue ? \\"$\\" : \\"\\"}</span>{value}</p>\\n  <h3>{title}</h3>\\n</div>\\n\\n<style>.box{align-items:center;background-color:#1f2833;border-color:#1f2833;border-radius:.25rem;border-width:2px;display:flex;flex-direction:column;justify-content:center;padding:2rem 1.5rem}h3{color:#66fcf1;font-size:1.25rem;font-weight:300;letter-spacing:.025em;line-height:1.75rem;margin-top:.5rem;opacity:.5;text-transform:uppercase}h3,p{font-family:Teko,sans-serif;text-align:center}p{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:3rem;font-weight:700;line-height:1}</style>\\n"],"names":[],"mappings":"AAYO,mBAAI,CAAC,YAAY,MAAM,CAAC,iBAAiB,OAAO,CAAC,aAAa,OAAO,CAAC,cAAc,MAAM,CAAC,aAAa,GAAG,CAAC,QAAQ,IAAI,CAAC,eAAe,MAAM,CAAC,gBAAgB,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,iBAAE,CAAC,MAAM,OAAO,CAAC,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,eAAe,MAAM,CAAC,YAAY,OAAO,CAAC,WAAW,KAAK,CAAC,QAAQ,EAAE,CAAC,eAAe,SAAS,CAAC,iBAAE,CAAC,gBAAC,CAAC,YAAY,IAAI,CAAC,UAAU,CAAC,WAAW,MAAM,CAAC,gBAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,YAAY,GAAG,CAAC,YAAY,CAAC,CAAC"}'
};
const StatBox = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {title = "Gas Price"} = $$props;
  let {value = 3.22} = $$props;
  let {isDollarValue = false} = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.value === void 0 && $$bindings.value && value !== void 0)
    $$bindings.value(value);
  if ($$props.isDollarValue === void 0 && $$bindings.isDollarValue && isDollarValue !== void 0)
    $$bindings.isDollarValue(isDollarValue);
  $$result.css.add(css$c);
  return `<div class="${"box svelte-17l3umk"}"><p class="${"svelte-17l3umk"}"><span class="${"font-light"}">${escape(isDollarValue ? "$" : "")}</span>${escape(value)}</p>
  <h3 class="${"svelte-17l3umk"}">${escape(title)}</h3>
</div>`;
});
const getCalendarPage = (month, year, dayProps, weekStart = 0) => {
  let date = new Date(year, month, 1);
  date.setDate(date.getDate() - date.getDay() + weekStart);
  let nextMonth = month === 11 ? 0 : month + 1;
  let weeks = [];
  while (date.getMonth() !== nextMonth || date.getDay() !== weekStart || weeks.length !== 6) {
    if (date.getDay() === weekStart)
      weeks.unshift({days: [], id: `${year}${month}${year}${weeks.length}`});
    const updated = Object.assign({
      partOfMonth: date.getMonth() === month,
      day: date.getDate(),
      month: date.getMonth(),
      year: date.getFullYear(),
      date: new Date(date)
    }, dayProps(date));
    weeks[0].days.push(updated);
    date.setDate(date.getDate() + 1);
  }
  weeks.reverse();
  return {month, year, weeks};
};
const getDayPropsHandler = (start, end, selectableCallback) => {
  let today = new Date();
  today.setHours(0, 0, 0, 0);
  return (date) => {
    const isInRange = date >= start && date <= end;
    return {
      isInRange,
      selectable: isInRange && (!selectableCallback || selectableCallback(date)),
      isToday: date.getTime() === today.getTime()
    };
  };
};
function getMonths(start, end, selectableCallback = null, weekStart = 0) {
  start.setHours(0, 0, 0, 0);
  end.setHours(0, 0, 0, 0);
  let endDate = new Date(end.getFullYear(), end.getMonth() + 1, 1);
  let months = [];
  let date = new Date(start.getFullYear(), start.getMonth(), 1);
  let dayPropsHandler = getDayPropsHandler(start, end, selectableCallback);
  while (date < endDate) {
    months.push(getCalendarPage(date.getMonth(), date.getFullYear(), dayPropsHandler, weekStart));
    date.setMonth(date.getMonth() + 1);
  }
  return months;
}
const areDatesEquivalent = (a, b) => a.getDate() === b.getDate() && a.getMonth() === b.getMonth() && a.getFullYear() === b.getFullYear();
var Week_svelte_svelte_type_style_lang = '.week.svelte-tl62dg.svelte-tl62dg{display:flex;flex-flow:row;-ms-grid-column:1;grid-column:1;justify-content:space-around;margin:0;padding:0}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+1){-ms-grid-row:1;grid-row:1}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+2){-ms-grid-row:2;grid-row:2}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+3){-ms-grid-row:3;grid-row:3}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+4){-ms-grid-row:4;grid-row:4}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+5){-ms-grid-row:5;grid-row:5}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+6){-ms-grid-row:6;grid-row:6}.day.svelte-tl62dg.svelte-tl62dg{color:var(--day-text-color);display:flex;flex:1 0 auto;flex-basis:0;font-size:16px;font-weight:700;height:auto;margin:2px;text-align:center}.day.is-disabled.svelte-tl62dg.svelte-tl62dg,.day.outside-month.svelte-tl62dg.svelte-tl62dg{opacity:.35}.day.svelte-tl62dg.svelte-tl62dg:before{content:"";float:left;padding-top:100%}.day--label.svelte-tl62dg.svelte-tl62dg{align-items:center;background:var(--day-background-color);border:1px solid #fff;border-radius:50%;color:var(--day-text-color);cursor:pointer;display:flex;flex-direction:column;font-weight:400;justify-content:center;margin:10%;padding:0;position:relative;transition:all .1s linear;width:100%}.day--label.disabled.svelte-tl62dg.svelte-tl62dg{cursor:default}@media(min-width:480px){.day--label.highlighted.svelte-tl62dg.svelte-tl62dg,.day--label.svelte-tl62dg.svelte-tl62dg:not(.disabled):hover{background:var(--day-highlighted-background-color);border-color:var(--day-highlighted-background-color);color:var(--day-highlighted-text-color)}}.day--label.shake-date.svelte-tl62dg.svelte-tl62dg{-webkit-animation:svelte-tl62dg-shake .4s linear 1;animation:svelte-tl62dg-shake .4s linear 1}.day--label.selected.svelte-tl62dg.svelte-tl62dg,.day--label.selected.svelte-tl62dg.svelte-tl62dg:hover,.day--label.svelte-tl62dg.svelte-tl62dg:active:not(.disabled){background-color:var(--highlight-color);border-color:var(--highlight-color);color:#fff}.day.is-today.svelte-tl62dg .day--label.svelte-tl62dg,.day.is-today.svelte-tl62dg .day--label.svelte-tl62dg:hover{background:none;border-color:var(--highlight-color);color:#000;opacity:1}@-webkit-keyframes svelte-tl62dg-shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}to{transform:translate(0)}}@keyframes svelte-tl62dg-shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}to{transform:translate(0)}}';
const css$b = {
  code: '.week.svelte-tl62dg.svelte-tl62dg{display:flex;flex-flow:row;-ms-grid-column:1;grid-column:1;justify-content:space-around;margin:0;padding:0}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+1){-ms-grid-row:1;grid-row:1}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+2){-ms-grid-row:2;grid-row:2}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+3){-ms-grid-row:3;grid-row:3}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+4){-ms-grid-row:4;grid-row:4}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+5){-ms-grid-row:5;grid-row:5}.week.svelte-tl62dg.svelte-tl62dg:nth-child(6n+6){-ms-grid-row:6;grid-row:6}.day.svelte-tl62dg.svelte-tl62dg{color:var(--day-text-color);display:flex;flex:1 0 auto;flex-basis:0;font-size:16px;font-weight:700;height:auto;margin:2px;text-align:center}.day.is-disabled.svelte-tl62dg.svelte-tl62dg,.day.outside-month.svelte-tl62dg.svelte-tl62dg{opacity:.35}.day.svelte-tl62dg.svelte-tl62dg:before{content:"";float:left;padding-top:100%}.day--label.svelte-tl62dg.svelte-tl62dg{align-items:center;background:var(--day-background-color);border:1px solid #fff;border-radius:50%;color:var(--day-text-color);cursor:pointer;display:flex;flex-direction:column;font-weight:400;justify-content:center;margin:10%;padding:0;position:relative;transition:all .1s linear;width:100%}.day--label.disabled.svelte-tl62dg.svelte-tl62dg{cursor:default}@media(min-width:480px){.day--label.highlighted.svelte-tl62dg.svelte-tl62dg,.day--label.svelte-tl62dg.svelte-tl62dg:not(.disabled):hover{background:var(--day-highlighted-background-color);border-color:var(--day-highlighted-background-color);color:var(--day-highlighted-text-color)}}.day--label.shake-date.svelte-tl62dg.svelte-tl62dg{-webkit-animation:svelte-tl62dg-shake .4s linear 1;animation:svelte-tl62dg-shake .4s linear 1}.day--label.selected.svelte-tl62dg.svelte-tl62dg,.day--label.selected.svelte-tl62dg.svelte-tl62dg:hover,.day--label.svelte-tl62dg.svelte-tl62dg:active:not(.disabled){background-color:var(--highlight-color);border-color:var(--highlight-color);color:#fff}.day.is-today.svelte-tl62dg .day--label.svelte-tl62dg,.day.is-today.svelte-tl62dg .day--label.svelte-tl62dg:hover{background:none;border-color:var(--highlight-color);color:#000;opacity:1}@-webkit-keyframes svelte-tl62dg-shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}to{transform:translate(0)}}@keyframes svelte-tl62dg-shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}to{transform:translate(0)}}',
  map: `{"version":3,"file":"Week.svelte","sources":["Week.svelte"],"sourcesContent":["<script>\\n  import { areDatesEquivalent } from './lib/helpers';\\n  import { fly, fade } from 'svelte/transition';\\n  import { createEventDispatcher } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n\\n  export let days;\\n  export let selected;\\n  export let highlighted;\\n  export let shouldShakeDate;\\n  export let direction;\\n</script>\\n\\n<div \\n  class=\\"week\\" \\n  in:fly|local={{ x: direction * 50, duration: 180, delay: 90 }}\\n  out:fade|local={{ duration: 180 }}\\n>\\n  {#each days as day}\\n    <div \\n      class=\\"day\\" \\n      class:outside-month={!day.partOfMonth}\\n      class:is-today={day.isToday}\\n      class:is-disabled={!day.selectable}\\n    >\\n      <button \\n        class=\\"day--label\\" \\n        class:selected={areDatesEquivalent(day.date, selected)}\\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\\n        class:disabled={!day.selectable}\\n        type=\\"button\\"\\n        on:click={() => dispatch('dateSelected', day.date)}\\n      >\\n        {day.date.getDate()}\\n      </button>\\n    </div>\\n  {/each}\\n</div>\\n\\n<style>.week{display:flex;flex-flow:row;-ms-grid-column:1;grid-column:1;justify-content:space-around;margin:0;padding:0}.week:nth-child(6n+1){-ms-grid-row:1;grid-row:1}.week:nth-child(6n+2){-ms-grid-row:2;grid-row:2}.week:nth-child(6n+3){-ms-grid-row:3;grid-row:3}.week:nth-child(6n+4){-ms-grid-row:4;grid-row:4}.week:nth-child(6n+5){-ms-grid-row:5;grid-row:5}.week:nth-child(6n+6){-ms-grid-row:6;grid-row:6}.day{color:var(--day-text-color);display:flex;flex:1 0 auto;flex-basis:0;font-size:16px;font-weight:700;height:auto;margin:2px;text-align:center}.day.is-disabled,.day.outside-month{opacity:.35}.day:before{content:\\"\\";float:left;padding-top:100%}.day--label{align-items:center;background:var(--day-background-color);border:1px solid #fff;border-radius:50%;color:var(--day-text-color);cursor:pointer;display:flex;flex-direction:column;font-weight:400;justify-content:center;margin:10%;padding:0;position:relative;transition:all .1s linear;width:100%}.day--label.disabled{cursor:default}@media (min-width:480px){.day--label.highlighted,.day--label:not(.disabled):hover{background:var(--day-highlighted-background-color);border-color:var(--day-highlighted-background-color);color:var(--day-highlighted-text-color)}}.day--label.shake-date{-webkit-animation:shake .4s linear 1;animation:shake .4s linear 1}.day--label.selected,.day--label.selected:hover,.day--label:active:not(.disabled){background-color:var(--highlight-color);border-color:var(--highlight-color);color:#fff}.day.is-today .day--label,.day.is-today .day--label:hover{background:none;border-color:var(--highlight-color);color:#000;opacity:1}@-webkit-keyframes shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}to{transform:translate(0)}}@keyframes shake{0%{transform:translate(7px)}20%{transform:translate(-7px)}40%{transform:translate(3px)}60%{transform:translate(-3px)}80%{transform:translate(1px)}to{transform:translate(0)}}</style>\\n"],"names":[],"mappings":"AAyCO,iCAAK,CAAC,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,gBAAgB,CAAC,CAAC,YAAY,CAAC,CAAC,gBAAgB,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,iCAAK,WAAW,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,iCAAK,WAAW,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,iCAAK,WAAW,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,iCAAK,WAAW,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,iCAAK,WAAW,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,iCAAK,WAAW,IAAI,CAAC,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,gCAAI,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,UAAU,IAAI,CAAC,YAAY,GAAG,CAAC,OAAO,IAAI,CAAC,OAAO,GAAG,CAAC,WAAW,MAAM,CAAC,IAAI,wCAAY,CAAC,IAAI,0CAAc,CAAC,QAAQ,GAAG,CAAC,gCAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,IAAI,CAAC,YAAY,IAAI,CAAC,uCAAW,CAAC,YAAY,MAAM,CAAC,WAAW,IAAI,sBAAsB,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,OAAO,OAAO,CAAC,QAAQ,IAAI,CAAC,eAAe,MAAM,CAAC,YAAY,GAAG,CAAC,gBAAgB,MAAM,CAAC,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,QAAQ,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,WAAW,qCAAS,CAAC,OAAO,OAAO,CAAC,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,WAAW,wCAAY,CAAC,uCAAW,KAAK,SAAS,CAAC,MAAM,CAAC,WAAW,IAAI,kCAAkC,CAAC,CAAC,aAAa,IAAI,kCAAkC,CAAC,CAAC,MAAM,IAAI,4BAA4B,CAAC,CAAC,CAAC,WAAW,uCAAW,CAAC,kBAAkB,mBAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,mBAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,GAAG,qCAAS,CAAC,WAAW,qCAAS,MAAM,CAAC,QAAQ,+BAAG,OAAO,KAAK,SAAS,CAAC,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,CAAC,CAAC,aAAa,IAAI,aAAa,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,IAAI,uBAAS,CAAC,yBAAW,CAAC,IAAI,CAAC,sBAAQ,CAAC,yBAAW,MAAM,CAAC,WAAW,IAAI,CAAC,aAAa,IAAI,iBAAiB,CAAC,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,mBAAmB,mBAAK,CAAC,EAAE,CAAC,UAAU,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,mBAAK,CAAC,EAAE,CAAC,UAAU,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,UAAU,UAAU,CAAC,CAAC,CAAC,CAAC"}`
};
const Week = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  createEventDispatcher();
  let {days} = $$props;
  let {selected} = $$props;
  let {highlighted} = $$props;
  let {shouldShakeDate} = $$props;
  let {direction} = $$props;
  if ($$props.days === void 0 && $$bindings.days && days !== void 0)
    $$bindings.days(days);
  if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
    $$bindings.selected(selected);
  if ($$props.highlighted === void 0 && $$bindings.highlighted && highlighted !== void 0)
    $$bindings.highlighted(highlighted);
  if ($$props.shouldShakeDate === void 0 && $$bindings.shouldShakeDate && shouldShakeDate !== void 0)
    $$bindings.shouldShakeDate(shouldShakeDate);
  if ($$props.direction === void 0 && $$bindings.direction && direction !== void 0)
    $$bindings.direction(direction);
  $$result.css.add(css$b);
  return `<div class="${"week svelte-tl62dg"}">${each(days, (day) => `<div class="${[
    "day svelte-tl62dg",
    (!day.partOfMonth ? "outside-month" : "") + " " + (day.isToday ? "is-today" : "") + " " + (!day.selectable ? "is-disabled" : "")
  ].join(" ").trim()}"><button class="${[
    "day--label svelte-tl62dg",
    (areDatesEquivalent(day.date, selected) ? "selected" : "") + " " + (areDatesEquivalent(day.date, highlighted) ? "highlighted" : "") + " " + (shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate) ? "shake-date" : "") + " " + (!day.selectable ? "disabled" : "")
  ].join(" ").trim()}" type="${"button"}">${escape(day.date.getDate())}</button>
    </div>`)}
</div>`;
});
var Month_svelte_svelte_type_style_lang = ".month-container.svelte-1kfve3b{-ms-grid-columns:1fr;-ms-grid-rows:1fr;display:-ms-grid;display:grid;width:100%}";
const css$a = {
  code: ".month-container.svelte-1kfve3b{-ms-grid-columns:1fr;-ms-grid-rows:1fr;display:-ms-grid;display:grid;width:100%}",
  map: `{"version":3,"file":"Month.svelte","sources":["Month.svelte"],"sourcesContent":["<script>\\n  import Week from './Week.svelte';\\n\\n  export let id;\\n  export let visibleMonth;\\n  export let selected;\\n  export let highlighted;\\n  export let shouldShakeDate;\\n\\n  let lastId = id;\\n  let direction;\\n\\n  $: {\\n    direction = lastId < id ? 1 : -1;\\n    lastId = id;\\n  }\\n</script>\\n\\n<div class=\\"month-container\\">\\n  {#each visibleMonth.weeks as week (week.id) }\\n    <Week \\n      days={week.days} \\n      {selected} \\n      {highlighted} \\n      {shouldShakeDate} \\n      {direction}\\n      on:dateSelected \\n    />\\n  {/each}\\n</div>\\n\\n<style>.month-container{-ms-grid-columns:1fr;-ms-grid-rows:1fr;display:-ms-grid;display:grid;width:100%}</style>\\n"],"names":[],"mappings":"AA+BO,+BAAgB,CAAC,iBAAiB,GAAG,CAAC,cAAc,GAAG,CAAC,QAAQ,QAAQ,CAAC,QAAQ,IAAI,CAAC,MAAM,IAAI,CAAC"}`
};
const Month = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {id} = $$props;
  let {visibleMonth} = $$props;
  let {selected} = $$props;
  let {highlighted} = $$props;
  let {shouldShakeDate} = $$props;
  let lastId = id;
  let direction;
  if ($$props.id === void 0 && $$bindings.id && id !== void 0)
    $$bindings.id(id);
  if ($$props.visibleMonth === void 0 && $$bindings.visibleMonth && visibleMonth !== void 0)
    $$bindings.visibleMonth(visibleMonth);
  if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
    $$bindings.selected(selected);
  if ($$props.highlighted === void 0 && $$bindings.highlighted && highlighted !== void 0)
    $$bindings.highlighted(highlighted);
  if ($$props.shouldShakeDate === void 0 && $$bindings.shouldShakeDate && shouldShakeDate !== void 0)
    $$bindings.shouldShakeDate(shouldShakeDate);
  $$result.css.add(css$a);
  {
    {
      direction = lastId < id ? 1 : -1;
      lastId = id;
    }
  }
  return `<div class="${"month-container svelte-1kfve3b"}">${each(visibleMonth.weeks, (week) => `${validate_component(Week, "Week").$$render($$result, {
    days: week.days,
    selected,
    highlighted,
    shouldShakeDate,
    direction
  }, {}, {})}`)}
</div>`;
});
var NavBar_svelte_svelte_type_style_lang = '.heading-section.svelte-1l7yt84.svelte-1l7yt84{color:#3d4548;display:flex;font-size:20px;font-weight:700;justify-content:space-between;padding:24px 15px}.label.svelte-1l7yt84.svelte-1l7yt84{cursor:pointer}.month-selector.svelte-1l7yt84.svelte-1l7yt84{background-color:#fff;bottom:0;left:0;opacity:0;position:absolute;right:0;text-align:center;top:75px;transform:scale(1.2);transition:all .3s;visibility:hidden;z-index:1}.month-selector.open.svelte-1l7yt84.svelte-1l7yt84{opacity:1;transform:scale(1);visibility:visible}.month-selector--month.svelte-1l7yt84.svelte-1l7yt84{border:1px solid #efefef;color:#4a4a4a;display:inline-block;height:23%;margin:.5%;opacity:.2;width:31.333%}.month-selector--month.selectable.svelte-1l7yt84.svelte-1l7yt84{opacity:1}.month-selector--month.selectable.svelte-1l7yt84.svelte-1l7yt84:hover{box-shadow:0 0 3px rgba(0,0,0,.15);cursor:pointer}.month-selector--month.selected.svelte-1l7yt84.svelte-1l7yt84{background:var(--highlight-color);color:#fff}.month-selector--month.svelte-1l7yt84.svelte-1l7yt84:before{content:" ";height:100%}.month-selector--month.svelte-1l7yt84 span.svelte-1l7yt84,.month-selector--month.svelte-1l7yt84.svelte-1l7yt84:before{display:inline-block;vertical-align:middle}.control.svelte-1l7yt84.svelte-1l7yt84{opacity:.2;padding:0 8px;transform:translateY(3px)}.control.enabled.svelte-1l7yt84.svelte-1l7yt84{cursor:pointer;opacity:1}.arrow.svelte-1l7yt84.svelte-1l7yt84{border-color:#a9a9a9;border-style:solid;border-width:0 2px 2px 0;display:inline-block;height:18px;width:18px}.arrow.right.svelte-1l7yt84.svelte-1l7yt84{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.arrow.left.svelte-1l7yt84.svelte-1l7yt84{transform:rotate(135deg);-webkit-transform:rotate(135deg)}';
const css$9 = {
  code: '.heading-section.svelte-1l7yt84.svelte-1l7yt84{color:#3d4548;display:flex;font-size:20px;font-weight:700;justify-content:space-between;padding:24px 15px}.label.svelte-1l7yt84.svelte-1l7yt84{cursor:pointer}.month-selector.svelte-1l7yt84.svelte-1l7yt84{background-color:#fff;bottom:0;left:0;opacity:0;position:absolute;right:0;text-align:center;top:75px;transform:scale(1.2);transition:all .3s;visibility:hidden;z-index:1}.month-selector.open.svelte-1l7yt84.svelte-1l7yt84{opacity:1;transform:scale(1);visibility:visible}.month-selector--month.svelte-1l7yt84.svelte-1l7yt84{border:1px solid #efefef;color:#4a4a4a;display:inline-block;height:23%;margin:.5%;opacity:.2;width:31.333%}.month-selector--month.selectable.svelte-1l7yt84.svelte-1l7yt84{opacity:1}.month-selector--month.selectable.svelte-1l7yt84.svelte-1l7yt84:hover{box-shadow:0 0 3px rgba(0,0,0,.15);cursor:pointer}.month-selector--month.selected.svelte-1l7yt84.svelte-1l7yt84{background:var(--highlight-color);color:#fff}.month-selector--month.svelte-1l7yt84.svelte-1l7yt84:before{content:" ";height:100%}.month-selector--month.svelte-1l7yt84.svelte-1l7yt84:before,.month-selector--month.svelte-1l7yt84 span.svelte-1l7yt84{display:inline-block;vertical-align:middle}.control.svelte-1l7yt84.svelte-1l7yt84{opacity:.2;padding:0 8px;transform:translateY(3px)}.control.enabled.svelte-1l7yt84.svelte-1l7yt84{cursor:pointer;opacity:1}.arrow.svelte-1l7yt84.svelte-1l7yt84{border-color:#a9a9a9;border-style:solid;border-width:0 2px 2px 0;display:inline-block;height:18px;width:18px}.arrow.right.svelte-1l7yt84.svelte-1l7yt84{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.arrow.left.svelte-1l7yt84.svelte-1l7yt84{transform:rotate(135deg);-webkit-transform:rotate(135deg)}',
  map: `{"version":3,"file":"NavBar.svelte","sources":["NavBar.svelte"],"sourcesContent":["<script>\\n  import { createEventDispatcher } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n\\n  export let month;\\n  export let year;\\n  export let start;\\n  export let end;\\n  export let canIncrementMonth;\\n  export let canDecrementMonth;\\n  export let monthsOfYear;\\n\\n  let monthSelectorOpen = false;\\n  let availableMonths;\\n\\n  $: {\\n    let isOnLowerBoundary = start.getFullYear() === year;\\n    let isOnUpperBoundary = end.getFullYear() === year;\\n    availableMonths = monthsOfYear.map((m, i) => {\\n      return Object.assign({}, {\\n        name: m[0],\\n        abbrev: m[1]\\n      }, {\\n        selectable:\\n          (!isOnLowerBoundary && !isOnUpperBoundary)\\n          || (\\n            (!isOnLowerBoundary || i >= start.getMonth())\\n            && (!isOnUpperBoundary || i <= end.getMonth())\\n          )\\n      });\\n    });\\n  }\\n\\n  function toggleMonthSelectorOpen() {\\n    monthSelectorOpen = !monthSelectorOpen;\\n  }\\n\\n  function monthSelected(event, { m, i }) {\\n    event.stopPropagation();\\n    if (!m.selectable) return;\\n    dispatch('monthSelected', i);\\n    toggleMonthSelectorOpen();\\n  }\\n</script>\\n\\n<div class=\\"title\\">\\n  <div class=\\"heading-section\\">\\n    <div class=\\"control\\" \\n      class:enabled={canDecrementMonth}\\n      on:click={() => dispatch('incrementMonth', -1)}>\\n      <i class=\\"arrow left\\"></i>\\n    </div>\\n    <div class=\\"label\\" on:click={toggleMonthSelectorOpen}>\\n      {monthsOfYear[month][0]} {year}\\n    </div> \\n    <div class=\\"control\\"\\n      class:enabled={canIncrementMonth}\\n      on:click={() => dispatch('incrementMonth', 1)}>\\n      <i class=\\"arrow right\\"></i>\\n    </div>\\n  </div>\\n  <div class=\\"month-selector\\" class:open={monthSelectorOpen}>\\n    {#each availableMonths as monthDefinition, index}\\n      <div \\n        class=\\"month-selector--month\\" \\n        class:selected={index === month}\\n        class:selectable={monthDefinition.selectable}\\n        on:click={e => monthSelected(e, { m: monthDefinition, i: index })}\\n      >\\n        <span>{monthDefinition.abbrev}</span>\\n      </div>\\n    {/each}\\n  </div>\\n</div>\\n\\n<style>.heading-section{color:#3d4548;display:flex;font-size:20px;font-weight:700;justify-content:space-between;padding:24px 15px}.label{cursor:pointer}.month-selector{background-color:#fff;bottom:0;left:0;opacity:0;position:absolute;right:0;text-align:center;top:75px;transform:scale(1.2);transition:all .3s;visibility:hidden;z-index:1}.month-selector.open{opacity:1;transform:scale(1);visibility:visible}.month-selector--month{border:1px solid #efefef;color:#4a4a4a;display:inline-block;height:23%;margin:.5%;opacity:.2;width:31.333%}.month-selector--month.selectable{opacity:1}.month-selector--month.selectable:hover{box-shadow:0 0 3px rgba(0,0,0,.15);cursor:pointer}.month-selector--month.selected{background:var(--highlight-color);color:#fff}.month-selector--month:before{content:\\" \\";height:100%}.month-selector--month:before,.month-selector--month span{display:inline-block;vertical-align:middle}.control{opacity:.2;padding:0 8px;transform:translateY(3px)}.control.enabled{cursor:pointer;opacity:1}.arrow{border-color:#a9a9a9;border-style:solid;border-width:0 2px 2px 0;display:inline-block;height:18px;width:18px}.arrow.right{transform:rotate(-45deg);-webkit-transform:rotate(-45deg)}.arrow.left{transform:rotate(135deg);-webkit-transform:rotate(135deg)}</style>\\n"],"names":[],"mappings":"AA4EO,8CAAgB,CAAC,MAAM,OAAO,CAAC,QAAQ,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY,GAAG,CAAC,gBAAgB,aAAa,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,oCAAM,CAAC,OAAO,OAAO,CAAC,6CAAe,CAAC,iBAAiB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,MAAM,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,WAAW,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,mCAAK,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,WAAW,OAAO,CAAC,oDAAsB,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,OAAO,CAAC,QAAQ,YAAY,CAAC,OAAO,GAAG,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,OAAO,CAAC,sBAAsB,yCAAW,CAAC,QAAQ,CAAC,CAAC,sBAAsB,yCAAW,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,sBAAsB,uCAAS,CAAC,WAAW,IAAI,iBAAiB,CAAC,CAAC,MAAM,IAAI,CAAC,oDAAsB,OAAO,CAAC,QAAQ,GAAG,CAAC,OAAO,IAAI,CAAC,oDAAsB,OAAO,CAAC,qCAAsB,CAAC,mBAAI,CAAC,QAAQ,YAAY,CAAC,eAAe,MAAM,CAAC,sCAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAU,WAAW,GAAG,CAAC,CAAC,QAAQ,sCAAQ,CAAC,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,oCAAM,CAAC,aAAa,OAAO,CAAC,aAAa,KAAK,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,YAAY,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,oCAAM,CAAC,UAAU,OAAO,MAAM,CAAC,CAAC,kBAAkB,OAAO,MAAM,CAAC,CAAC,MAAM,mCAAK,CAAC,UAAU,OAAO,MAAM,CAAC,CAAC,kBAAkB,OAAO,MAAM,CAAC,CAAC"}`
};
const NavBar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  createEventDispatcher();
  let {month} = $$props;
  let {year} = $$props;
  let {start} = $$props;
  let {end} = $$props;
  let {canIncrementMonth} = $$props;
  let {canDecrementMonth} = $$props;
  let {monthsOfYear: monthsOfYear2} = $$props;
  let availableMonths;
  if ($$props.month === void 0 && $$bindings.month && month !== void 0)
    $$bindings.month(month);
  if ($$props.year === void 0 && $$bindings.year && year !== void 0)
    $$bindings.year(year);
  if ($$props.start === void 0 && $$bindings.start && start !== void 0)
    $$bindings.start(start);
  if ($$props.end === void 0 && $$bindings.end && end !== void 0)
    $$bindings.end(end);
  if ($$props.canIncrementMonth === void 0 && $$bindings.canIncrementMonth && canIncrementMonth !== void 0)
    $$bindings.canIncrementMonth(canIncrementMonth);
  if ($$props.canDecrementMonth === void 0 && $$bindings.canDecrementMonth && canDecrementMonth !== void 0)
    $$bindings.canDecrementMonth(canDecrementMonth);
  if ($$props.monthsOfYear === void 0 && $$bindings.monthsOfYear && monthsOfYear2 !== void 0)
    $$bindings.monthsOfYear(monthsOfYear2);
  $$result.css.add(css$9);
  {
    {
      let isOnLowerBoundary = start.getFullYear() === year;
      let isOnUpperBoundary = end.getFullYear() === year;
      availableMonths = monthsOfYear2.map((m, i) => {
        return Object.assign({}, {name: m[0], abbrev: m[1]}, {
          selectable: !isOnLowerBoundary && !isOnUpperBoundary || (!isOnLowerBoundary || i >= start.getMonth()) && (!isOnUpperBoundary || i <= end.getMonth())
        });
      });
    }
  }
  return `<div class="${"title"}"><div class="${"heading-section svelte-1l7yt84"}"><div class="${["control svelte-1l7yt84", canDecrementMonth ? "enabled" : ""].join(" ").trim()}"><i class="${"arrow left svelte-1l7yt84"}"></i></div>
    <div class="${"label svelte-1l7yt84"}">${escape(monthsOfYear2[month][0])} ${escape(year)}</div> 
    <div class="${["control svelte-1l7yt84", canIncrementMonth ? "enabled" : ""].join(" ").trim()}"><i class="${"arrow right svelte-1l7yt84"}"></i></div></div>
  <div class="${["month-selector svelte-1l7yt84", ""].join(" ").trim()}">${each(availableMonths, (monthDefinition, index2) => `<div class="${[
    "month-selector--month svelte-1l7yt84",
    (index2 === month ? "selected" : "") + " " + (monthDefinition.selectable ? "selectable" : "")
  ].join(" ").trim()}"><span class="${"svelte-1l7yt84"}">${escape(monthDefinition.abbrev)}</span>
      </div>`)}</div>
</div>`;
});
var Popover_svelte_svelte_type_style_lang = ".sc-popover.svelte-x1t286.svelte-x1t286{position:relative}.contents-wrapper.svelte-x1t286.svelte-x1t286{display:none;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);transition:none;z-index:2}.contents.svelte-x1t286.svelte-x1t286{-webkit-animation:svelte-x1t286-grow .2s cubic-bezier(.92,.09,.18,1.05) forwards;animation:svelte-x1t286-grow .2s cubic-bezier(.92,.09,.18,1.05) forwards;background:#fff;box-shadow:0 10px 26px rgba(0,0,0,.4);display:none;opacity:.8;padding-top:0}.contents-inner.svelte-x1t286.svelte-x1t286{-webkit-animation:svelte-x1t286-fadeIn .4s forwards;animation:svelte-x1t286-fadeIn .4s forwards}.contents-wrapper.visible.svelte-x1t286.svelte-x1t286{display:block}.contents-wrapper.visible.svelte-x1t286 .contents.svelte-x1t286{display:block;opacity:1;transform:scale(1)}.contents-wrapper.shrink.svelte-x1t286 .contents.svelte-x1t286{-webkit-animation:svelte-x1t286-shrink .15s cubic-bezier(.92,.09,.18,1.05) forwards;animation:svelte-x1t286-shrink .15s cubic-bezier(.92,.09,.18,1.05) forwards}@-webkit-keyframes svelte-x1t286-grow{0%{opacity:0;transform:scale(.9,.1)}30%{opacity:1}to{transform:scale(1)}}@keyframes svelte-x1t286-grow{0%{opacity:0;transform:scale(.9,.1)}30%{opacity:1}to{transform:scale(1)}}@-webkit-keyframes svelte-x1t286-shrink{0%{opacity:1;transform:scale(1)}70%{opacity:1}to{opacity:0;transform:scale(.9,.1)}}@keyframes svelte-x1t286-shrink{0%{opacity:1;transform:scale(1)}70%{opacity:1}to{opacity:0;transform:scale(.9,.1)}}@-webkit-keyframes svelte-x1t286-fadeIn{0%{opacity:0}50%{opacity:0}to{opacity:1}}@keyframes svelte-x1t286-fadeIn{0%{opacity:0}50%{opacity:0}to{opacity:1}}";
const css$8 = {
  code: ".sc-popover.svelte-x1t286.svelte-x1t286{position:relative}.contents-wrapper.svelte-x1t286.svelte-x1t286{display:none;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);transition:none;z-index:2}.contents.svelte-x1t286.svelte-x1t286{-webkit-animation:svelte-x1t286-grow .2s cubic-bezier(.92,.09,.18,1.05) forwards;animation:svelte-x1t286-grow .2s cubic-bezier(.92,.09,.18,1.05) forwards;background:#fff;box-shadow:0 10px 26px rgba(0,0,0,.4);display:none;opacity:.8;padding-top:0}.contents-inner.svelte-x1t286.svelte-x1t286{-webkit-animation:svelte-x1t286-fadeIn .4s forwards;animation:svelte-x1t286-fadeIn .4s forwards}.contents-wrapper.visible.svelte-x1t286.svelte-x1t286{display:block}.contents-wrapper.visible.svelte-x1t286 .contents.svelte-x1t286{display:block;opacity:1;transform:scale(1)}.contents-wrapper.shrink.svelte-x1t286 .contents.svelte-x1t286{-webkit-animation:svelte-x1t286-shrink .15s cubic-bezier(.92,.09,.18,1.05) forwards;animation:svelte-x1t286-shrink .15s cubic-bezier(.92,.09,.18,1.05) forwards}@-webkit-keyframes svelte-x1t286-grow{0%{opacity:0;transform:scale(.9,.1)}30%{opacity:1}to{transform:scale(1)}}@keyframes svelte-x1t286-grow{0%{opacity:0;transform:scale(.9,.1)}30%{opacity:1}to{transform:scale(1)}}@-webkit-keyframes svelte-x1t286-shrink{0%{opacity:1;transform:scale(1)}70%{opacity:1}to{opacity:0;transform:scale(.9,.1)}}@keyframes svelte-x1t286-shrink{0%{opacity:1;transform:scale(1)}70%{opacity:1}to{opacity:0;transform:scale(.9,.1)}}@-webkit-keyframes svelte-x1t286-fadeIn{0%{opacity:0}50%{opacity:0}to{opacity:1}}@keyframes svelte-x1t286-fadeIn{0%{opacity:0}50%{opacity:0}to{opacity:1}}",
  map: `{"version":3,"file":"Popover.svelte","sources":["Popover.svelte"],"sourcesContent":["<script>\\n  import { onMount, createEventDispatcher, tick } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n\\n  let once = (el, evt, cb) => {\\n    function handler() {\\n      cb.apply(this, arguments);\\n      el.removeEventListener(evt, handler);\\n    }\\n    el.addEventListener(evt, handler);\\n  };\\n\\n  let popover;\\n  let w;\\n  let triggerContainer;\\n  let contentsAnimated;\\n  let contentsWrapper;\\n  let translateY = 0;\\n  let translateX = 0;\\n\\n  export let open = false;\\n  export let shrink;\\n  export let trigger;\\n  export const close = () => {\\n    shrink = true;\\n    once(contentsAnimated, 'animationend', () => {\\n      shrink = false;\\n      open = false;\\n      dispatch('closed');\\n    });\\n  };\\n\\n  function checkForFocusLoss(evt) {\\n    if (!open) return;\\n    let el = evt.target;\\n    // eslint-disable-next-line\\n    do {\\n      if (el === popover) return;\\n    // eslint-disable-next-line\\n    } while (el = el.parentNode);\\n    close();\\n  }\\n\\n  onMount(() => {\\n    document.addEventListener('click', checkForFocusLoss);\\n    if (!trigger) return;\\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\\n\\n    // eslint-disable-next-line\\n    return () => {\\n      document.removeEventListener('click', checkForFocusLoss);\\n    };\\n  });\\n\\n  const getDistanceToEdges = async () => {\\n    if (!open) { open = true; }\\n    await tick();\\n    let rect = contentsWrapper.getBoundingClientRect();\\n    return {\\n      top: rect.top + (-1 * translateY),\\n      bottom: window.innerHeight - rect.bottom + translateY,\\n      left: rect.left + (-1 * translateX),\\n      right: document.body.clientWidth - rect.right + translateX\\n    };\\n  };\\n\\n  const getTranslate = async () => {\\n    let dist = await getDistanceToEdges();\\n    let x; let\\n      y;\\n    if (w < 480) {\\n      y = dist.bottom;\\n    } else if (dist.top < 0) {\\n      y = Math.abs(dist.top);\\n    } else if (dist.bottom < 0) {\\n      y = dist.bottom;\\n    } else {\\n      y = 0;\\n    }\\n    if (dist.left < 0) {\\n      x = Math.abs(dist.left);\\n    } else if (dist.right < 0) {\\n      x = dist.right;\\n    } else {\\n      x = 0;\\n    }\\n    return { x, y };\\n  };\\n\\n  const doOpen = async () => {\\n    const { x, y } = await getTranslate();\\n\\n    translateX = x;\\n    translateY = y;\\n    open = true;\\n\\n    dispatch('opened');\\n  };\\n</script>\\n\\n<svelte:window bind:innerWidth={w} />\\n<div class=\\"sc-popover\\" bind:this={popover}>\\n  <div class=\\"trigger\\" on:click={doOpen} bind:this={triggerContainer}>\\n    <slot name=\\"trigger\\">\\n    </slot>\\n  </div>\\n  <div \\n    class=\\"contents-wrapper\\" \\n    class:visible={open}\\n    class:shrink={shrink}\\n    style=\\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\\" \\n    bind:this={contentsWrapper}>\\n    <div class=\\"contents\\" bind:this={contentsAnimated}>\\n      <div class=\\"contents-inner\\">\\n        <slot name=\\"contents\\"></slot>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<style>.sc-popover{position:relative}.contents-wrapper{display:none;left:50%;position:absolute;top:50%;transform:translate(-50%,-50%);transition:none;z-index:2}.contents{-webkit-animation:grow .2s cubic-bezier(.92,.09,.18,1.05) forwards;animation:grow .2s cubic-bezier(.92,.09,.18,1.05) forwards;background:#fff;box-shadow:0 10px 26px rgba(0,0,0,.4);display:none;opacity:.8;padding-top:0}.contents-inner{-webkit-animation:fadeIn .4s forwards;animation:fadeIn .4s forwards}.contents-wrapper.visible{display:block}.contents-wrapper.visible .contents{display:block;opacity:1;transform:scale(1)}.contents-wrapper.shrink .contents{-webkit-animation:shrink .15s cubic-bezier(.92,.09,.18,1.05) forwards;animation:shrink .15s cubic-bezier(.92,.09,.18,1.05) forwards}@-webkit-keyframes grow{0%{opacity:0;transform:scale(.9,.1)}30%{opacity:1}to{transform:scale(1)}}@keyframes grow{0%{opacity:0;transform:scale(.9,.1)}30%{opacity:1}to{transform:scale(1)}}@-webkit-keyframes shrink{0%{opacity:1;transform:scale(1)}70%{opacity:1}to{opacity:0;transform:scale(.9,.1)}}@keyframes shrink{0%{opacity:1;transform:scale(1)}70%{opacity:1}to{opacity:0;transform:scale(.9,.1)}}@-webkit-keyframes fadeIn{0%{opacity:0}50%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}50%{opacity:0}to{opacity:1}}</style>\\n"],"names":[],"mappings":"AAyHO,uCAAW,CAAC,SAAS,QAAQ,CAAC,6CAAiB,CAAC,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,QAAQ,CAAC,IAAI,GAAG,CAAC,UAAU,UAAU,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,IAAI,CAAC,QAAQ,CAAC,CAAC,qCAAS,CAAC,kBAAkB,kBAAI,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,kBAAI,CAAC,GAAG,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC,YAAY,CAAC,CAAC,2CAAe,CAAC,kBAAkB,oBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,oBAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,iBAAiB,oCAAQ,CAAC,QAAQ,KAAK,CAAC,iBAAiB,sBAAQ,CAAC,uBAAS,CAAC,QAAQ,KAAK,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,iBAAiB,qBAAO,CAAC,uBAAS,CAAC,kBAAkB,oBAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,oBAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,mBAAmB,kBAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,kBAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,CAAC,mBAAmB,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,mBAAmB,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,oBAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC"}`
};
const Popover = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const dispatch = createEventDispatcher();
  let once = (el, evt, cb) => {
    function handler() {
      cb.apply(this, arguments);
      el.removeEventListener(evt, handler);
    }
    el.addEventListener(evt, handler);
  };
  let popover;
  let triggerContainer;
  let contentsAnimated;
  let contentsWrapper;
  let translateY = 0;
  let translateX = 0;
  let {open = false} = $$props;
  let {shrink} = $$props;
  let {trigger} = $$props;
  const close = () => {
    shrink = true;
    once(contentsAnimated, "animationend", () => {
      shrink = false;
      open = false;
      dispatch("closed");
    });
  };
  function checkForFocusLoss(evt) {
    if (!open)
      return;
    let el = evt.target;
    do {
      if (el === popover)
        return;
    } while (el = el.parentNode);
    close();
  }
  onMount(() => {
    document.addEventListener("click", checkForFocusLoss);
    if (!trigger)
      return;
    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));
    return () => {
      document.removeEventListener("click", checkForFocusLoss);
    };
  });
  if ($$props.open === void 0 && $$bindings.open && open !== void 0)
    $$bindings.open(open);
  if ($$props.shrink === void 0 && $$bindings.shrink && shrink !== void 0)
    $$bindings.shrink(shrink);
  if ($$props.trigger === void 0 && $$bindings.trigger && trigger !== void 0)
    $$bindings.trigger(trigger);
  if ($$props.close === void 0 && $$bindings.close && close !== void 0)
    $$bindings.close(close);
  $$result.css.add(css$8);
  return `
<div class="${"sc-popover svelte-x1t286"}"${add_attribute("this", popover, 1)}><div class="${"trigger"}"${add_attribute("this", triggerContainer, 1)}>${slots.trigger ? slots.trigger({}) : `
    `}</div>
  <div class="${[
    "contents-wrapper svelte-x1t286",
    (open ? "visible" : "") + " " + (shrink ? "shrink" : "")
  ].join(" ").trim()}" style="${"transform: translate(-50%,-50%) translate(" + escape(translateX) + "px, " + escape(translateY) + "px)"}"${add_attribute("this", contentsWrapper, 1)}><div class="${"contents svelte-x1t286"}"${add_attribute("this", contentsAnimated, 1)}><div class="${"contents-inner svelte-x1t286"}">${slots.contents ? slots.contents({}) : ``}</div></div></div>
</div>`;
});
const injectStringData = (str, name, value) => str.replace(new RegExp("#{" + name + "}", "g"), value);
const enforceLength = function(str, length, fromBack) {
  str = str.toString();
  if (typeof length == "undefined")
    return str;
  if (str.length == length)
    return str;
  fromBack = typeof fromBack == "undefined" ? false : fromBack;
  if (str.length < length) {
    while (length - str.length > 0)
      str = "0" + str;
  } else if (str.length > length) {
    if (fromBack) {
      str = str.substring(str.length - length);
    } else {
      str = str.substring(0, length);
    }
  }
  return str;
};
const daysOfWeek = [
  ["Sunday", "Sun"],
  ["Monday", "Mon"],
  ["Tuesday", "Tue"],
  ["Wednesday", "Wed"],
  ["Thursday", "Thu"],
  ["Friday", "Fri"],
  ["Saturday", "Sat"]
];
const monthsOfYear = [
  ["January", "Jan"],
  ["February", "Feb"],
  ["March", "Mar"],
  ["April", "Apr"],
  ["May", "May"],
  ["June", "Jun"],
  ["July", "Jul"],
  ["August", "Aug"],
  ["September", "Sep"],
  ["October", "Oct"],
  ["November", "Nov"],
  ["December", "Dec"]
];
let dictionary = {
  daysOfWeek,
  monthsOfYear
};
const extendDictionary = (conf) => Object.keys(conf).forEach((key) => {
  if (dictionary[key] && dictionary[key].length == conf[key].length) {
    dictionary[key] = conf[key];
  }
});
var acceptedDateTokens = [
  {
    key: "d",
    method: function(date) {
      return enforceLength(date.getDate(), 2);
    }
  },
  {
    key: "D",
    method: function(date) {
      return dictionary.daysOfWeek[date.getDay()][1];
    }
  },
  {
    key: "j",
    method: function(date) {
      return date.getDate();
    }
  },
  {
    key: "l",
    method: function(date) {
      return dictionary.daysOfWeek[date.getDay()][0];
    }
  },
  {
    key: "F",
    method: function(date) {
      return dictionary.monthsOfYear[date.getMonth()][0];
    }
  },
  {
    key: "m",
    method: function(date) {
      return enforceLength(date.getMonth() + 1, 2);
    }
  },
  {
    key: "M",
    method: function(date) {
      return dictionary.monthsOfYear[date.getMonth()][1];
    }
  },
  {
    key: "n",
    method: function(date) {
      return date.getMonth() + 1;
    }
  },
  {
    key: "Y",
    method: function(date) {
      return date.getFullYear();
    }
  },
  {
    key: "y",
    method: function(date) {
      return enforceLength(date.getFullYear(), 2, true);
    }
  }
];
var acceptedTimeTokens = [
  {
    key: "a",
    method: function(date) {
      return date.getHours() > 11 ? "pm" : "am";
    }
  },
  {
    key: "A",
    method: function(date) {
      return date.getHours() > 11 ? "PM" : "AM";
    }
  },
  {
    key: "g",
    method: function(date) {
      return date.getHours() % 12 || 12;
    }
  },
  {
    key: "G",
    method: function(date) {
      return date.getHours();
    }
  },
  {
    key: "h",
    method: function(date) {
      return enforceLength(date.getHours() % 12 || 12, 2);
    }
  },
  {
    key: "H",
    method: function(date) {
      return enforceLength(date.getHours(), 2);
    }
  },
  {
    key: "i",
    method: function(date) {
      return enforceLength(date.getMinutes(), 2);
    }
  },
  {
    key: "s",
    method: function(date) {
      return enforceLength(date.getSeconds(), 2);
    }
  }
];
const internationalize = (conf = {}) => {
  extendDictionary(conf);
};
const formatDate = (date, template2 = "#{m}/#{d}/#{Y}") => {
  acceptedDateTokens.forEach((token) => {
    if (template2.indexOf(`#{${token.key}}`) == -1)
      return;
    template2 = injectStringData(template2, token.key, token.method(date));
  });
  acceptedTimeTokens.forEach((token) => {
    if (template2.indexOf(`#{${token.key}}`) == -1)
      return;
    template2 = injectStringData(template2, token.key, token.method(date));
  });
  return template2;
};
const keyCodes = {
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  pgup: 33,
  pgdown: 34,
  enter: 13,
  escape: 27,
  tab: 9
};
Object.keys(keyCodes).map((k) => keyCodes[k]);
var Datepicker_svelte_svelte_type_style_lang = ".datepicker.svelte-1jpaezg.svelte-1jpaezg{display:inline-block;margin:0 auto;overflow:visible;text-align:center}.calendar-button.svelte-1jpaezg.svelte-1jpaezg{background:var(--button-background-color);border:1px solid var(--button-border-color);border-radius:7px;box-shadow:0 0 3px rgba(0,0,0,.1);color:var(--button-text-color);cursor:pointer;display:block;padding:10px 20px;text-align:center;text-decoration:none;width:300px}.svelte-1jpaezg.svelte-1jpaezg,.svelte-1jpaezg.svelte-1jpaezg:after,.svelte-1jpaezg.svelte-1jpaezg:before{box-sizing:inherit}.calendar.svelte-1jpaezg.svelte-1jpaezg{box-sizing:border-box;overflow:hidden;padding:0 10px 10px;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100vw}@media(min-width:480px){.calendar.svelte-1jpaezg.svelte-1jpaezg{height:auto;max-width:100%;width:340px}}.legend.svelte-1jpaezg.svelte-1jpaezg{color:#4a4a4a;margin-bottom:5px;padding:10px 0}.legend.svelte-1jpaezg span.svelte-1jpaezg{display:inline-block;text-align:center;width:14.285714%}";
const css$7 = {
  code: ".datepicker.svelte-1jpaezg.svelte-1jpaezg{display:inline-block;margin:0 auto;overflow:visible;text-align:center}.calendar-button.svelte-1jpaezg.svelte-1jpaezg{background:var(--button-background-color);border:1px solid var(--button-border-color);border-radius:7px;box-shadow:0 0 3px rgba(0,0,0,.1);color:var(--button-text-color);cursor:pointer;display:block;padding:10px 20px;text-align:center;text-decoration:none;width:300px}.svelte-1jpaezg.svelte-1jpaezg,.svelte-1jpaezg.svelte-1jpaezg:after,.svelte-1jpaezg.svelte-1jpaezg:before{box-sizing:inherit}.calendar.svelte-1jpaezg.svelte-1jpaezg{box-sizing:border-box;overflow:hidden;padding:0 10px 10px;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100vw}@media(min-width:480px){.calendar.svelte-1jpaezg.svelte-1jpaezg{height:auto;max-width:100%;width:340px}}.legend.svelte-1jpaezg.svelte-1jpaezg{color:#4a4a4a;margin-bottom:5px;padding:10px 0}.legend.svelte-1jpaezg span.svelte-1jpaezg{display:inline-block;text-align:center;width:14.285714%}",
  map: `{"version":3,"file":"Datepicker.svelte","sources":["Datepicker.svelte"],"sourcesContent":["<script>\\n  import Month from './Month.svelte';\\n  import NavBar from './NavBar.svelte';\\n  import Popover from './Popover.svelte';\\n  import { getMonths } from './lib/helpers';\\n  import { formatDate, internationalize } from 'timeUtils';\\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\\n  import { onMount, createEventDispatcher } from 'svelte';\\n\\n  const dispatch = createEventDispatcher();\\n  const today = new Date();\\n  const oneYear = 1000 * 60 * 60 * 24 * 365;\\n\\n  let popover;\\n\\n  export let format = '#{m}/#{d}/#{Y}';\\n  export let start = new Date(Date.now() - oneYear);\\n  export let end = new Date(Date.now() + oneYear);\\n  export let selected = today;\\n  export let dateChosen = false;\\n  export let trigger = null;\\n  export let selectableCallback = null;\\n  export let weekStart = 0;\\n  export let daysOfWeek = [\\n    ['Sunday', 'Sun'],\\n    ['Monday', 'Mon'],\\n    ['Tuesday', 'Tue'],\\n    ['Wednesday', 'Wed'],\\n    ['Thursday', 'Thu'],\\n    ['Friday', 'Fri'],\\n    ['Saturday', 'Sat']\\n  ];\\n  export let monthsOfYear = [\\n    ['January', 'Jan'],\\n    ['February', 'Feb'],\\n    ['March', 'Mar'],\\n    ['April', 'Apr'],\\n    ['May', 'May'],\\n    ['June', 'Jun'],\\n    ['July', 'Jul'],\\n    ['August', 'Aug'],\\n    ['September', 'Sep'],\\n    ['October', 'Oct'],\\n    ['November', 'Nov'],\\n    ['December', 'Dec']\\n  ];\\n\\n  selected = (\\n    selected.getTime() < start.getTime()\\n    || selected.getTime() > end.getTime()\\n  ) ? start : selected;\\n\\n  export let style = '';\\n\\n  // theming variables:\\n  export let buttonBackgroundColor = '#fff';\\n  export let buttonBorderColor = '#eee';\\n  export let buttonTextColor = '#333';\\n  export let highlightColor = '#f7901e';\\n  export let dayBackgroundColor = 'none';\\n  export let dayTextColor = '#4a4a4a';\\n  export let dayHighlightedBackgroundColor = '#efefef';\\n  export let dayHighlightedTextColor = '#4a4a4a';\\n\\n  internationalize({ daysOfWeek, monthsOfYear });\\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\\n    let dow = daysOfWeek.slice();\\n    dow.push(dow.shift());\\n    return dow;\\n  })();\\n\\n  let highlighted = today;\\n  let shouldShakeDate = false;\\n  let shakeHighlightTimeout;\\n  let month = today.getMonth();\\n  let year = today.getFullYear();\\n\\n  let isOpen = false;\\n  let isClosing = false;\\n\\n  today.setHours(0, 0, 0, 0);\\n\\n  function assignmentHandler(formatted) {\\n    if (!trigger) return;\\n    trigger.innerHTML = formatted;\\n  }\\n\\n  $: months = getMonths(start, end, selectableCallback, weekStart);\\n\\n  let monthIndex = 0;\\n  $: {\\n    monthIndex = 0;\\n    for (let i = 0; i < months.length; i += 1) {\\n      if (months[i].month === month && months[i].year === year) {\\n        monthIndex = i;\\n      }\\n    }\\n  }\\n  $: visibleMonth = months[monthIndex];\\n\\n  $: visibleMonthId = year + month / 100;\\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\\n  $: canIncrementMonth = monthIndex < months.length - 1;\\n  $: canDecrementMonth = monthIndex > 0;\\n  $: wrapperStyle = \`\\n    --button-background-color: \${buttonBackgroundColor};\\n    --button-border-color: \${buttonBorderColor};\\n    --button-text-color: \${buttonTextColor};\\n    --highlight-color: \${highlightColor};\\n    --day-background-color: \${dayBackgroundColor};\\n    --day-text-color: \${dayTextColor};\\n    --day-highlighted-background-color: \${dayHighlightedBackgroundColor};\\n    --day-highlighted-text-color: \${dayHighlightedTextColor};\\n    \${style}\\n  \`;\\n\\n  export let formattedSelected;\\n  $: {\\n    formattedSelected = typeof format === 'function'\\n      ? format(selected)\\n      : formatDate(selected, format);\\n  }\\n\\n  onMount(() => {\\n    month = selected.getMonth();\\n    year = selected.getFullYear();\\n  });\\n\\n  function changeMonth(selectedMonth) {\\n    month = selectedMonth;\\n    highlighted = new Date(year, month, 1);\\n  }\\n\\n  function incrementMonth(direction, day = 1) {\\n    if (direction === 1 && !canIncrementMonth) return;\\n    if (direction === -1 && !canDecrementMonth) return;\\n    let current = new Date(year, month, 1);\\n    current.setMonth(current.getMonth() + direction);\\n    month = current.getMonth();\\n    year = current.getFullYear();\\n    highlighted = new Date(year, month, day);\\n  }\\n\\n  function getDefaultHighlighted() {\\n    return new Date(selected);\\n  }\\n\\n  const getDay = (m, d, y) => {\\n    let theMonth = months.find(aMonth => aMonth.month === m && aMonth.year === y);\\n    if (!theMonth) return null;\\n    // eslint-disable-next-line\\n    for (let i = 0; i < theMonth.weeks.length; ++i) {\\n      // eslint-disable-next-line\\n      for (let j = 0; j < theMonth.weeks[i].days.length; ++j) {\\n        let aDay = theMonth.weeks[i].days[j];\\n        if (aDay.month === m && aDay.day === d && aDay.year === y) return aDay;\\n      }\\n    }\\n    return null;\\n  };\\n\\n  function incrementDayHighlighted(amount) {\\n    let proposedDate = new Date(highlighted);\\n    proposedDate.setDate(highlighted.getDate() + amount);\\n    let correspondingDayObj = getDay(\\n      proposedDate.getMonth(),\\n      proposedDate.getDate(),\\n      proposedDate.getFullYear()\\n    );\\n    if (!correspondingDayObj || !correspondingDayObj.isInRange) return;\\n    highlighted = proposedDate;\\n    if (amount > 0 && highlighted > lastVisibleDate) {\\n      incrementMonth(1, highlighted.getDate());\\n    }\\n    if (amount < 0 && highlighted < firstVisibleDate) {\\n      incrementMonth(-1, highlighted.getDate());\\n    }\\n  }\\n\\n  function checkIfVisibleDateIsSelectable(date) {\\n    const proposedDay = getDay(date.getMonth(), date.getDate(), date.getFullYear());\\n    return proposedDay && proposedDay.selectable;\\n  }\\n\\n  function shakeDate(date) {\\n    clearTimeout(shakeHighlightTimeout);\\n    shouldShakeDate = date;\\n    shakeHighlightTimeout = setTimeout(() => {\\n      shouldShakeDate = false;\\n    }, 700);\\n  }\\n\\n  function assignValueToTrigger(formatted) {\\n    assignmentHandler(formatted);\\n  }\\n\\n  function registerSelection(chosen) {\\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\\n    // eslint-disable-next-line\\n    close();\\n    selected = chosen;\\n    dateChosen = true;\\n    assignValueToTrigger(formattedSelected);\\n    return dispatch('dateSelected', { date: chosen });\\n  }\\n\\n  function handleKeyPress(evt) {\\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\\n    evt.preventDefault();\\n    switch (evt.keyCode) {\\n      case keyCodes.left:\\n        incrementDayHighlighted(-1);\\n        break;\\n      case keyCodes.up:\\n        incrementDayHighlighted(-7);\\n        break;\\n      case keyCodes.right:\\n        incrementDayHighlighted(1);\\n        break;\\n      case keyCodes.down:\\n        incrementDayHighlighted(7);\\n        break;\\n      case keyCodes.pgup:\\n        incrementMonth(-1);\\n        break;\\n      case keyCodes.pgdown:\\n        incrementMonth(1);\\n        break;\\n      case keyCodes.escape:\\n        // eslint-disable-next-line\\n        close();\\n        break;\\n      case keyCodes.enter:\\n        registerSelection(highlighted);\\n        break;\\n      default:\\n        break;\\n    }\\n  }\\n\\n  function registerClose() {\\n    document.removeEventListener('keydown', handleKeyPress);\\n    dispatch('close');\\n  }\\n\\n  function close() {\\n    popover.close();\\n    registerClose();\\n  }\\n\\n  function registerOpen() {\\n    highlighted = getDefaultHighlighted();\\n    month = selected.getMonth();\\n    year = selected.getFullYear();\\n    document.addEventListener('keydown', handleKeyPress);\\n    dispatch('open');\\n  }\\n</script>\\n\\n<div\\n  class=\\"datepicker\\"\\n  class:open=\\"{isOpen}\\"\\n  class:closing=\\"{isClosing}\\"\\n  style={wrapperStyle}\\n>\\n  <Popover\\n    bind:this=\\"{popover}\\"\\n    bind:open=\\"{isOpen}\\"\\n    bind:shrink=\\"{isClosing}\\"\\n    {trigger}\\n    on:opened=\\"{registerOpen}\\"\\n    on:closed=\\"{registerClose}\\"\\n  >\\n    <div slot=\\"trigger\\">\\n      <slot {selected} {formattedSelected}>\\n        {#if !trigger}\\n        <button class=\\"calendar-button\\" type=\\"button\\">\\n          {formattedSelected}\\n        </button>\\n        {/if}\\n      </slot>\\n    </div>\\n    <div slot=\\"contents\\">\\n      <div class=\\"calendar\\">\\n        <NavBar\\n          {month}\\n          {year}\\n          {canIncrementMonth}\\n          {canDecrementMonth}\\n          {start}\\n          {end}\\n          {monthsOfYear}\\n          on:monthSelected={e => changeMonth(e.detail)}\\n          on:incrementMonth={e => incrementMonth(e.detail)}\\n        />\\n        <div class=\\"legend\\">\\n          {#each sortedDaysOfWeek as day}\\n          <span>{day[1]}</span>\\n          {/each}\\n        </div>\\n        <Month\\n          {visibleMonth}\\n          {selected}\\n          {highlighted}\\n          {shouldShakeDate}\\n          id={visibleMonthId}\\n          on:dateSelected={e => registerSelection(e.detail)}\\n        />\\n      </div>\\n    </div>\\n  </Popover>\\n</div>\\n\\n<style>.datepicker{display:inline-block;margin:0 auto;overflow:visible;text-align:center}.calendar-button{background:var(--button-background-color);border:1px solid var(--button-border-color);border-radius:7px;box-shadow:0 0 3px rgba(0,0,0,.1);color:var(--button-text-color);cursor:pointer;display:block;padding:10px 20px;text-align:center;text-decoration:none;width:300px}*,:after,:before{box-sizing:inherit}.calendar{box-sizing:border-box;overflow:hidden;padding:0 10px 10px;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100vw}@media (min-width:480px){.calendar{height:auto;max-width:100%;width:340px}}.legend{color:#4a4a4a;margin-bottom:5px;padding:10px 0}.legend span{display:inline-block;text-align:center;width:14.285714%}</style>\\n"],"names":[],"mappings":"AA0TO,yCAAW,CAAC,QAAQ,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,OAAO,CAAC,WAAW,MAAM,CAAC,8CAAgB,CAAC,WAAW,IAAI,yBAAyB,CAAC,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,qBAAqB,CAAC,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,mBAAmB,CAAC,CAAC,OAAO,OAAO,CAAC,QAAQ,KAAK,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,MAAM,CAAC,gBAAgB,IAAI,CAAC,MAAM,KAAK,CAAC,8BAAC,+BAAC,MAAM,+BAAC,OAAO,CAAC,WAAW,OAAO,CAAC,uCAAS,CAAC,WAAW,UAAU,CAAC,SAAS,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,QAAQ,CAAC,oBAAoB,IAAI,CAAC,iBAAiB,IAAI,CAAC,gBAAgB,IAAI,CAAC,YAAY,IAAI,CAAC,MAAM,KAAK,CAAC,MAAM,AAAC,WAAW,KAAK,CAAC,CAAC,uCAAS,CAAC,OAAO,IAAI,CAAC,UAAU,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,qCAAO,CAAC,MAAM,OAAO,CAAC,cAAc,GAAG,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,sBAAO,CAAC,mBAAI,CAAC,QAAQ,YAAY,CAAC,WAAW,MAAM,CAAC,MAAM,UAAU,CAAC"}`
};
const Datepicker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let months;
  let visibleMonth;
  let visibleMonthId;
  let canIncrementMonth;
  let canDecrementMonth;
  let wrapperStyle;
  createEventDispatcher();
  const today = new Date();
  const oneYear = 1e3 * 60 * 60 * 24 * 365;
  let popover;
  let {format: format2 = "#{m}/#{d}/#{Y}"} = $$props;
  let {start = new Date(Date.now() - oneYear)} = $$props;
  let {end = new Date(Date.now() + oneYear)} = $$props;
  let {selected = today} = $$props;
  let {dateChosen = false} = $$props;
  let {trigger = null} = $$props;
  let {selectableCallback = null} = $$props;
  let {weekStart = 0} = $$props;
  let {daysOfWeek: daysOfWeek2 = [
    ["Sunday", "Sun"],
    ["Monday", "Mon"],
    ["Tuesday", "Tue"],
    ["Wednesday", "Wed"],
    ["Thursday", "Thu"],
    ["Friday", "Fri"],
    ["Saturday", "Sat"]
  ]} = $$props;
  let {monthsOfYear: monthsOfYear2 = [
    ["January", "Jan"],
    ["February", "Feb"],
    ["March", "Mar"],
    ["April", "Apr"],
    ["May", "May"],
    ["June", "Jun"],
    ["July", "Jul"],
    ["August", "Aug"],
    ["September", "Sep"],
    ["October", "Oct"],
    ["November", "Nov"],
    ["December", "Dec"]
  ]} = $$props;
  selected = selected.getTime() < start.getTime() || selected.getTime() > end.getTime() ? start : selected;
  let {style = ""} = $$props;
  let {buttonBackgroundColor = "#fff"} = $$props;
  let {buttonBorderColor = "#eee"} = $$props;
  let {buttonTextColor = "#333"} = $$props;
  let {highlightColor = "#f7901e"} = $$props;
  let {dayBackgroundColor = "none"} = $$props;
  let {dayTextColor = "#4a4a4a"} = $$props;
  let {dayHighlightedBackgroundColor = "#efefef"} = $$props;
  let {dayHighlightedTextColor = "#4a4a4a"} = $$props;
  internationalize({daysOfWeek: daysOfWeek2, monthsOfYear: monthsOfYear2});
  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek2 : (() => {
    let dow = daysOfWeek2.slice();
    dow.push(dow.shift());
    return dow;
  })();
  let highlighted = today;
  let shouldShakeDate = false;
  let month = today.getMonth();
  let year = today.getFullYear();
  let isOpen = false;
  let isClosing = false;
  today.setHours(0, 0, 0, 0);
  let monthIndex = 0;
  let {formattedSelected} = $$props;
  onMount(() => {
    month = selected.getMonth();
    year = selected.getFullYear();
  });
  if ($$props.format === void 0 && $$bindings.format && format2 !== void 0)
    $$bindings.format(format2);
  if ($$props.start === void 0 && $$bindings.start && start !== void 0)
    $$bindings.start(start);
  if ($$props.end === void 0 && $$bindings.end && end !== void 0)
    $$bindings.end(end);
  if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0)
    $$bindings.selected(selected);
  if ($$props.dateChosen === void 0 && $$bindings.dateChosen && dateChosen !== void 0)
    $$bindings.dateChosen(dateChosen);
  if ($$props.trigger === void 0 && $$bindings.trigger && trigger !== void 0)
    $$bindings.trigger(trigger);
  if ($$props.selectableCallback === void 0 && $$bindings.selectableCallback && selectableCallback !== void 0)
    $$bindings.selectableCallback(selectableCallback);
  if ($$props.weekStart === void 0 && $$bindings.weekStart && weekStart !== void 0)
    $$bindings.weekStart(weekStart);
  if ($$props.daysOfWeek === void 0 && $$bindings.daysOfWeek && daysOfWeek2 !== void 0)
    $$bindings.daysOfWeek(daysOfWeek2);
  if ($$props.monthsOfYear === void 0 && $$bindings.monthsOfYear && monthsOfYear2 !== void 0)
    $$bindings.monthsOfYear(monthsOfYear2);
  if ($$props.style === void 0 && $$bindings.style && style !== void 0)
    $$bindings.style(style);
  if ($$props.buttonBackgroundColor === void 0 && $$bindings.buttonBackgroundColor && buttonBackgroundColor !== void 0)
    $$bindings.buttonBackgroundColor(buttonBackgroundColor);
  if ($$props.buttonBorderColor === void 0 && $$bindings.buttonBorderColor && buttonBorderColor !== void 0)
    $$bindings.buttonBorderColor(buttonBorderColor);
  if ($$props.buttonTextColor === void 0 && $$bindings.buttonTextColor && buttonTextColor !== void 0)
    $$bindings.buttonTextColor(buttonTextColor);
  if ($$props.highlightColor === void 0 && $$bindings.highlightColor && highlightColor !== void 0)
    $$bindings.highlightColor(highlightColor);
  if ($$props.dayBackgroundColor === void 0 && $$bindings.dayBackgroundColor && dayBackgroundColor !== void 0)
    $$bindings.dayBackgroundColor(dayBackgroundColor);
  if ($$props.dayTextColor === void 0 && $$bindings.dayTextColor && dayTextColor !== void 0)
    $$bindings.dayTextColor(dayTextColor);
  if ($$props.dayHighlightedBackgroundColor === void 0 && $$bindings.dayHighlightedBackgroundColor && dayHighlightedBackgroundColor !== void 0)
    $$bindings.dayHighlightedBackgroundColor(dayHighlightedBackgroundColor);
  if ($$props.dayHighlightedTextColor === void 0 && $$bindings.dayHighlightedTextColor && dayHighlightedTextColor !== void 0)
    $$bindings.dayHighlightedTextColor(dayHighlightedTextColor);
  if ($$props.formattedSelected === void 0 && $$bindings.formattedSelected && formattedSelected !== void 0)
    $$bindings.formattedSelected(formattedSelected);
  $$result.css.add(css$7);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    months = getMonths(start, end, selectableCallback, weekStart);
    {
      {
        monthIndex = 0;
        for (let i = 0; i < months.length; i += 1) {
          if (months[i].month === month && months[i].year === year) {
            monthIndex = i;
          }
        }
      }
    }
    visibleMonth = months[monthIndex];
    visibleMonthId = year + month / 100;
    visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;
    visibleMonth.weeks[0].days[0].date;
    canIncrementMonth = monthIndex < months.length - 1;
    canDecrementMonth = monthIndex > 0;
    wrapperStyle = `
    --button-background-color: ${buttonBackgroundColor};
    --button-border-color: ${buttonBorderColor};
    --button-text-color: ${buttonTextColor};
    --highlight-color: ${highlightColor};
    --day-background-color: ${dayBackgroundColor};
    --day-text-color: ${dayTextColor};
    --day-highlighted-background-color: ${dayHighlightedBackgroundColor};
    --day-highlighted-text-color: ${dayHighlightedTextColor};
    ${style}
  `;
    {
      {
        formattedSelected = typeof format2 === "function" ? format2(selected) : formatDate(selected, format2);
      }
    }
    $$rendered = `<div class="${[
      "datepicker svelte-1jpaezg",
      (isOpen ? "open" : "") + " " + (isClosing ? "closing" : "")
    ].join(" ").trim()}"${add_attribute("style", wrapperStyle, 0)}>${validate_component(Popover, "Popover").$$render($$result, {
      trigger,
      this: popover,
      open: isOpen,
      shrink: isClosing
    }, {
      this: ($$value) => {
        popover = $$value;
        $$settled = false;
      },
      open: ($$value) => {
        isOpen = $$value;
        $$settled = false;
      },
      shrink: ($$value) => {
        isClosing = $$value;
        $$settled = false;
      }
    }, {
      contents: () => `<div slot="${"contents"}" class="${"svelte-1jpaezg"}"><div class="${"calendar svelte-1jpaezg"}">${validate_component(NavBar, "NavBar").$$render($$result, {
        month,
        year,
        canIncrementMonth,
        canDecrementMonth,
        start,
        end,
        monthsOfYear: monthsOfYear2
      }, {}, {})}
        <div class="${"legend svelte-1jpaezg"}">${each(sortedDaysOfWeek, (day) => `<span class="${"svelte-1jpaezg"}">${escape(day[1])}</span>`)}</div>
        ${validate_component(Month, "Month").$$render($$result, {
        visibleMonth,
        selected,
        highlighted,
        shouldShakeDate,
        id: visibleMonthId
      }, {}, {})}</div></div>`,
      trigger: () => `<div slot="${"trigger"}" class="${"svelte-1jpaezg"}">${slots.default ? slots.default({selected, formattedSelected}) : `
        ${!trigger ? `<button class="${"calendar-button svelte-1jpaezg"}" type="${"button"}">${escape(formattedSelected)}</button>` : ``}
      `}</div>`
    })}
</div>`;
  } while (!$$settled);
  return $$rendered;
});
var AddShiftForm_svelte_svelte_type_style_lang = ".container.svelte-1u2yj6b{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);background:#fff;border-radius:.5rem;box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow);max-width:300px;padding:2rem;position:absolute;right:0;top:0;width:100%;z-index:20}h3.svelte-1u2yj6b{font-size:1.5rem;font-weight:700;line-height:2rem;margin-bottom:.75rem}input.svelte-1u2yj6b{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity));border-radius:.25rem;border-width:1px;font-size:1rem;font-weight:300;line-height:1.5rem;padding:.5rem;width:100%}input.svelte-1u2yj6b:focus{outline:2px solid transparent;outline-offset:2px}button.svelte-1u2yj6b{--tw-border-opacity:1;--tw-bg-opacity:1;--tw-text-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity));border-color:rgba(0,0,0,var(--tw-border-opacity));border-radius:.25rem;border-width:1px;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:500;line-height:1.25rem;padding:.75rem 2rem}button.svelte-1u2yj6b:focus{outline:2px solid transparent;outline-offset:2px}";
const css$6 = {
  code: ".container.svelte-1u2yj6b{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);background:#fff;border-radius:.5rem;box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow);max-width:300px;padding:2rem;position:absolute;right:0;top:0;width:100%;z-index:20}h3.svelte-1u2yj6b{font-size:1.5rem;font-weight:700;line-height:2rem;margin-bottom:.75rem}input.svelte-1u2yj6b{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity));border-radius:.25rem;border-width:1px;font-size:1rem;font-weight:300;line-height:1.5rem;padding:.5rem;width:100%}input.svelte-1u2yj6b:focus{outline:2px solid transparent;outline-offset:2px}button.svelte-1u2yj6b{--tw-border-opacity:1;--tw-bg-opacity:1;--tw-text-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity));border-color:rgba(0,0,0,var(--tw-border-opacity));border-radius:.25rem;border-width:1px;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:500;line-height:1.25rem;padding:.75rem 2rem}button.svelte-1u2yj6b:focus{outline:2px solid transparent;outline-offset:2px}",
  map: '{"version":3,"file":"AddShiftForm.svelte","sources":["AddShiftForm.svelte"],"sourcesContent":["<script>\\n  import { createEventDispatcher, onMount } from \\"svelte\\";\\n  import { fade } from \\"svelte/transition\\";\\n  import Datepicker from \\"svelte-calendar\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  // Props\\n  export let miles,\\n    milesPerGallon,\\n    gasPrice,\\n    grossEarned,\\n    shiftLength,\\n    milesInput;\\n\\n  // Functions\\n  onMount(() => {\\n    setTimeout(() => {\\n      milesInput.focus();\\n    }, 200);\\n  });\\n\\n  function add() {\\n    const gasUsed = miles / milesPerGallon;\\n    const gasCost = gasUsed * gasPrice;\\n    const netEarned = grossEarned - gasCost;\\n    const netPerHour = netEarned / shiftLength;\\n    const netPerMile = netEarned / miles;\\n\\n    dispatch(\\"addShift\\", {\\n      miles,\\n      milesPerGallon,\\n      gasPrice,\\n      grossEarned,\\n      shiftLength,\\n      gasUsed,\\n      gasCost,\\n      netEarned,\\n      netPerHour,\\n      netPerMile,\\n    });\\n  }\\n\\n  function cancel() {\\n    dispatch(\\"cancelAddShift\\");\\n  }\\n</script>\\n\\n<div in:fade={{ duration: 200 }} class=\\"container\\">\\n  <h3>Add Shift Info:</h3>\\n  <form on:submit|preventDefault={add}>\\n    <div class=\\"mb-3\\">\\n      <input\\n        type=\\"text\\"\\n        placeholder=\\"Miles driven\\"\\n        bind:this={milesInput}\\n        bind:value={miles}\\n      />\\n    </div>\\n    <div class=\\"mb-3\\">\\n      <input\\n        type=\\"text\\"\\n        placeholder=\\"Miles per gallon\\"\\n        bind:value={milesPerGallon}\\n      />\\n    </div>\\n    <div class=\\"mb-3\\">\\n      <input type=\\"text\\" placeholder=\\"Shift Length\\" bind:value={shiftLength} />\\n    </div>\\n    <div class=\\"mb-3\\">\\n      <input type=\\"text\\" placeholder=\\"Gas Price\\" bind:value={gasPrice} />\\n    </div>\\n    <div class=\\"mb-3\\">\\n      <input type=\\"text\\" placeholder=\\"Gross Earned\\" bind:value={grossEarned} />\\n    </div>\\n    <div class=\\"mb-3\\">\\n      <Datepicker />\\n    </div>\\n    <div class=\\"flex flex-row justify-between items-center\\">\\n      <button type=\\"submit\\">Add Shift</button>\\n      <a href=\\".\\" on:click|preventDefault={cancel}>Cancel</a>\\n    </div>\\n  </form>\\n</div>\\n\\n<style>.container{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);background:#fff;border-radius:.5rem;box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow);max-width:300px;padding:2rem;position:absolute;right:0;top:0;width:100%;z-index:20}h3{font-size:1.5rem;font-weight:700;line-height:2rem;margin-bottom:.75rem}input{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity));border-radius:.25rem;border-width:1px;font-size:1rem;font-weight:300;line-height:1.5rem;padding:.5rem;width:100%}input:focus{outline:2px solid transparent;outline-offset:2px}button{--tw-border-opacity:1;--tw-bg-opacity:1;--tw-text-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity));border-color:rgba(0,0,0,var(--tw-border-opacity));border-radius:.25rem;border-width:1px;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:500;line-height:1.25rem;padding:.75rem 2rem}button:focus{outline:2px solid transparent;outline-offset:2px}</style>\\n"],"names":[],"mappings":"AAqFO,yBAAU,CAAC,YAAY,gEAAgE,CAAC,WAAW,IAAI,CAAC,cAAc,KAAK,CAAC,WAAW,IAAI,uBAAuB,CAAC,eAAe,CAAC,CAAC,IAAI,gBAAgB,CAAC,eAAe,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,UAAU,KAAK,CAAC,QAAQ,IAAI,CAAC,SAAS,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,iBAAE,CAAC,UAAU,MAAM,CAAC,YAAY,GAAG,CAAC,YAAY,IAAI,CAAC,cAAc,MAAM,CAAC,oBAAK,CAAC,oBAAoB,CAAC,CAAC,aAAa,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,cAAc,MAAM,CAAC,aAAa,GAAG,CAAC,UAAU,IAAI,CAAC,YAAY,GAAG,CAAC,YAAY,MAAM,CAAC,QAAQ,KAAK,CAAC,MAAM,IAAI,CAAC,oBAAK,MAAM,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,GAAG,CAAC,qBAAM,CAAC,oBAAoB,CAAC,CAAC,gBAAgB,CAAC,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,mBAAmB,CAAC,CAAC,CAAC,cAAc,MAAM,CAAC,aAAa,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,QAAQ,MAAM,CAAC,IAAI,CAAC,qBAAM,MAAM,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,GAAG,CAAC"}'
};
create_ssr_component(($$result, $$props, $$bindings, slots) => {
  createEventDispatcher();
  let {miles} = $$props, {milesPerGallon} = $$props, {gasPrice} = $$props, {grossEarned} = $$props, {shiftLength} = $$props, {milesInput} = $$props;
  onMount(() => {
    setTimeout(() => {
      milesInput.focus();
    }, 200);
  });
  if ($$props.miles === void 0 && $$bindings.miles && miles !== void 0)
    $$bindings.miles(miles);
  if ($$props.milesPerGallon === void 0 && $$bindings.milesPerGallon && milesPerGallon !== void 0)
    $$bindings.milesPerGallon(milesPerGallon);
  if ($$props.gasPrice === void 0 && $$bindings.gasPrice && gasPrice !== void 0)
    $$bindings.gasPrice(gasPrice);
  if ($$props.grossEarned === void 0 && $$bindings.grossEarned && grossEarned !== void 0)
    $$bindings.grossEarned(grossEarned);
  if ($$props.shiftLength === void 0 && $$bindings.shiftLength && shiftLength !== void 0)
    $$bindings.shiftLength(shiftLength);
  if ($$props.milesInput === void 0 && $$bindings.milesInput && milesInput !== void 0)
    $$bindings.milesInput(milesInput);
  $$result.css.add(css$6);
  return `<div class="${"container svelte-1u2yj6b"}"><h3 class="${"svelte-1u2yj6b"}">Add Shift Info:</h3>
  <form><div class="${"mb-3"}"><input type="${"text"}" placeholder="${"Miles driven"}" class="${"svelte-1u2yj6b"}"${add_attribute("this", milesInput, 1)}${add_attribute("value", miles, 1)}></div>
    <div class="${"mb-3"}"><input type="${"text"}" placeholder="${"Miles per gallon"}" class="${"svelte-1u2yj6b"}"${add_attribute("value", milesPerGallon, 1)}></div>
    <div class="${"mb-3"}"><input type="${"text"}" placeholder="${"Shift Length"}" class="${"svelte-1u2yj6b"}"${add_attribute("value", shiftLength, 1)}></div>
    <div class="${"mb-3"}"><input type="${"text"}" placeholder="${"Gas Price"}" class="${"svelte-1u2yj6b"}"${add_attribute("value", gasPrice, 1)}></div>
    <div class="${"mb-3"}"><input type="${"text"}" placeholder="${"Gross Earned"}" class="${"svelte-1u2yj6b"}"${add_attribute("value", grossEarned, 1)}></div>
    <div class="${"mb-3"}">${validate_component(Datepicker, "Datepicker").$$render($$result, {}, {}, {})}</div>
    <div class="${"flex flex-row justify-between items-center"}"><button type="${"submit"}" class="${"svelte-1u2yj6b"}">Add Shift</button>
      <a href="${"."}">Cancel</a></div></form>
</div>`;
});
var ShiftDetail_svelte_svelte_type_style_lang = "p.svelte-ffwlhg{font-family:Teko,sans-serif;font-size:1.5rem;line-height:2rem;text-align:center}p.svelte-ffwlhg:first-child{text-align:left}";
const css$5 = {
  code: "p.svelte-ffwlhg{font-family:Teko,sans-serif;font-size:1.5rem;line-height:2rem;text-align:center}p.svelte-ffwlhg:first-child{text-align:left}",
  map: '{"version":3,"file":"ShiftDetail.svelte","sources":["ShiftDetail.svelte"],"sourcesContent":["<script>\\n  import { format } from \\"date-fns\\";\\n\\n  // PROPS\\n  export let shift;\\n</script>\\n\\n<div class=\\"item flex flex-row items-center px-5 py-3 rounded mb-3\\">\\n  <div class=\\"flex-1\\">\\n    <p class=\\"text-white\\">\\n      {format(new Date(shift.shiftDate.toDate()), \\"MMM d\\")}\\n    </p>\\n  </div>\\n  <div class=\\"flex-1\\">\\n    <p class=\\"text-white\\">\\n      {shift.miles} miles\\n    </p>\\n  </div>\\n  <div class=\\"flex-1\\">\\n    <p class=\\"text-white\\">\\n      {shift.milesPerGallon} MPG\\n    </p>\\n  </div>\\n  <div class=\\"flex-1\\">\\n    <p class=\\"text-white\\">\\n      {shift.gasCost.toFixed(2)} Gas Cost\\n    </p>\\n  </div>\\n  <div class=\\"flex-1\\">\\n    <p class=\\"text-white\\">\\n      {shift.grossEarned} Gross\\n    </p>\\n  </div>\\n  <div class=\\"flex-1\\">\\n    <p class=\\"text-white\\">\\n      {shift.netPerHour.toFixed(2)} Net Per Hour\\n    </p>\\n  </div>\\n</div>\\n\\n<style>p{font-family:Teko,sans-serif;font-size:1.5rem;line-height:2rem;text-align:center}p:first-child{text-align:left}</style>\\n"],"names":[],"mappings":"AAwCO,eAAC,CAAC,YAAY,IAAI,CAAC,UAAU,CAAC,UAAU,MAAM,CAAC,YAAY,IAAI,CAAC,WAAW,MAAM,CAAC,eAAC,YAAY,CAAC,WAAW,IAAI,CAAC"}'
};
const ShiftDetail = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let {shift} = $$props;
  if ($$props.shift === void 0 && $$bindings.shift && shift !== void 0)
    $$bindings.shift(shift);
  $$result.css.add(css$5);
  return `<div class="${"item flex flex-row items-center px-5 py-3 rounded mb-3"}"><div class="${"flex-1"}"><p class="${"text-white svelte-ffwlhg"}">${escape(format(new Date(shift.shiftDate.toDate()), "MMM d"))}</p></div>
  <div class="${"flex-1"}"><p class="${"text-white svelte-ffwlhg"}">${escape(shift.miles)} miles
    </p></div>
  <div class="${"flex-1"}"><p class="${"text-white svelte-ffwlhg"}">${escape(shift.milesPerGallon)} MPG
    </p></div>
  <div class="${"flex-1"}"><p class="${"text-white svelte-ffwlhg"}">${escape(shift.gasCost.toFixed(2))} Gas Cost
    </p></div>
  <div class="${"flex-1"}"><p class="${"text-white svelte-ffwlhg"}">${escape(shift.grossEarned)} Gross
    </p></div>
  <div class="${"flex-1"}"><p class="${"text-white svelte-ffwlhg"}">${escape(shift.netPerHour.toFixed(2))} Net Per Hour
    </p></div>
</div>`;
});
var index_svelte_svelte_type_style_lang$2 = "h3.svelte-1wmwb3s{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.5rem;font-weight:300;line-height:2rem;padding-bottom:.75rem;padding-top:.75rem;position:relative}.page.svelte-1wmwb3s{background-color:#0b0c10}button.svelte-1wmwb3s{background-color:#66fcf1;border-color:#66fcf1;border-radius:.25rem;border-width:1px;color:#1f2833;font-size:.875rem;font-weight:500;line-height:1.25rem;padding:.5rem 1.5rem;position:relative}button.svelte-1wmwb3s:focus{outline:2px solid transparent;outline-offset:2px}";
const css$4 = {
  code: "h3.svelte-1wmwb3s{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.5rem;font-weight:300;line-height:2rem;padding-bottom:.75rem;padding-top:.75rem;position:relative}.page.svelte-1wmwb3s{background-color:#0b0c10}button.svelte-1wmwb3s{background-color:#66fcf1;border-color:#66fcf1;border-radius:.25rem;border-width:1px;color:#1f2833;font-size:.875rem;font-weight:500;line-height:1.25rem;padding:.5rem 1.5rem;position:relative}button.svelte-1wmwb3s:focus{outline:2px solid transparent;outline-offset:2px}",
  map: '{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n  export async function load({ session }) {\\n    const { user } = session;\\n    if (!user) {\\n      return {\\n        status: 302,\\n        redirect: \\"/login\\",\\n      };\\n    }\\n    return {};\\n  }\\n</script>\\n\\n<script>\\n  import { onMount } from \\"svelte\\";\\n  import { session } from \\"$app/stores\\";\\n  import { format, startOfWeek, endOfWeek } from \\"date-fns\\";\\n  import { fade } from \\"svelte/transition\\";\\n  import {\\n    collection,\\n    addDoc,\\n    getFirestore,\\n    query,\\n    where,\\n    getDocs,\\n  } from \\"firebase/firestore\\";\\n\\n  // *** DATA STORES ***\\n  import currentWeekShifts from \\"$lib/stores/current-shifts\\";\\n\\n  // *** COMPONENTS ***\\n  import StatBox from \\"$lib/components/StatBox.svelte\\";\\n  import AddShiftForm from \\"$lib/components/AddShiftForm.svelte\\";\\n  import ShiftDetail from \\"$lib/components/ShiftDetail.svelte\\";\\n\\n  // *** VARS ***\\n  let shiftArray = [];\\n  let shiftMiles = [];\\n  let shiftMpgs = [];\\n  let shiftGasCost = [];\\n  let shiftGrossEarned = [];\\n  let shiftNetPerHour = [];\\n  let showAddShiftForm = false;\\n  let miles, milesPerGallon, gasPrice, grossEarned, shiftLength;\\n  let currentUser = $session.user;\\n\\n  // *** FUNCTIONS ***\\n  onMount(async () => {\\n    const currentWeekStart = format(\\n      startOfWeek(new Date(), { weekStartsOn: 1 }),\\n      \\"T\\"\\n    );\\n    const currentWeekEnd = format(\\n      endOfWeek(new Date(), { weekStartsOn: 1 }),\\n      \\"T\\"\\n    );\\n\\n    console.log(\\"Week: \\", currentWeekStart, currentWeekEnd);\\n    console.log(\\"User: \\", $session.user);\\n\\n    const db = await getFirestore();\\n    const q = await query(\\n      collection(db, \\"shifts\\"),\\n      where(\\n        \\"user\\",\\n        \\"==\\",\\n        $session.user,\\n        \\"&&\\",\\n        \\"`shiftDate`\\",\\n        \\">=\\",\\n        `${currentWeekStart}`,\\n        \\"&&\\",\\n        \\"shiftDate\\",\\n        \\"<=\\",\\n        `${currentWeekEnd}`\\n      )\\n    );\\n    const querySnapshot = await getDocs(q);\\n\\n    querySnapshot.forEach((doc) => {\\n      console.log(\\"Doc 1: \\", doc.data());\\n      const newShift = doc.data();\\n      shiftArray = [...shiftArray, newShift];\\n      shiftArray = shiftArray;\\n    });\\n    currentWeekShifts.setCurrentWeekShifts(shiftArray);\\n  });\\n\\n  function clearState() {\\n    miles = \\"\\";\\n    milesPerGallon = \\"\\";\\n    gasPrice = \\"\\";\\n    grossEarned = \\"\\";\\n    shiftLength = \\"\\";\\n  }\\n\\n  async function handleAddShift(event) {\\n    event.preventDefault();\\n    const shiftData = {\\n      gasUsed: event.detail.gasUsed,\\n      gasCost: event.detail.gasCost,\\n      netEarned: event.detail.netEarned,\\n      netPerHour: event.detail.netPerHour,\\n      miles: event.detail.miles,\\n      milesPerGallon: event.detail.milesPerGallon,\\n      gasPrice: event.detail.gasPrice,\\n      grossEarned: event.detail.grossEarned,\\n      shiftLength: event.detail.shiftLength,\\n      netPerMile: event.detail.netPerMile,\\n      user: $session.user,\\n      shiftDate: new Date(),\\n    };\\n    const db = await getFirestore();\\n    const docRef = await addDoc(collection(db, `shifts`), shiftData);\\n    currentWeekShifts.addCurrentWeekShift(shiftData);\\n    showAddShiftForm = false;\\n    clearState();\\n    console.log(docRef);\\n  }\\n\\n  //  REACTIVITY\\n\\n  // Calculating total miles\\n  $: {\\n    shiftMiles = [];\\n    $currentWeekShifts.forEach((s) => {\\n      shiftMiles = [...shiftMiles, parseFloat(s.miles)];\\n      shiftMiles = shiftMiles;\\n    });\\n  }\\n  $: totalMiles = shiftMiles.reduce((a, b) => a + b, 0);\\n\\n  // Calculating average MPG\\n  $: {\\n    shiftMpgs = [];\\n    $currentWeekShifts.forEach((s) => {\\n      shiftMpgs = [...shiftMpgs, parseFloat(s.milesPerGallon)];\\n      shiftMpgs = shiftMpgs;\\n    });\\n  }\\n  $: mpgs = shiftMpgs.reduce((a, b) => a + b, 0);\\n  $: averageMilesPerGallon = (mpgs / shiftMpgs.length).toFixed(1);\\n\\n  // Calculating gas cost\\n  $: {\\n    shiftGasCost = [];\\n    $currentWeekShifts.forEach((s) => {\\n      shiftGasCost = [...shiftGasCost, s.gasCost];\\n      shiftGasCost = shiftGasCost;\\n    });\\n  }\\n  $: totalGasCost = shiftGasCost.reduce((a, b) => a + b, 0).toFixed(2);\\n\\n  // Calculating gross earned\\n  $: {\\n    shiftGrossEarned = [];\\n    $currentWeekShifts.forEach((s) => {\\n      shiftGrossEarned = [...shiftGrossEarned, parseFloat(s.grossEarned)];\\n      shiftGrossEarned = shiftGrossEarned;\\n    });\\n  }\\n  $: totalGrossEarned = shiftGrossEarned.reduce((a, b) => a + b, 0).toFixed(2);\\n\\n  // Calculating net earned per gour\\n  $: {\\n    shiftNetPerHour = [];\\n    $currentWeekShifts.forEach((s) => {\\n      shiftNetPerHour = [...shiftNetPerHour, parseFloat(s.netPerHour)];\\n      shiftNetPerHour = shiftNetPerHour;\\n    });\\n  }\\n  $: net = shiftNetPerHour.reduce((a, b) => a + b, 0);\\n  $: averageNetPerHour = (net / shiftNetPerHour.length).toFixed(2);\\n</script>\\n\\n<div class=\\"page relative h-screen\\">\\n  <div class=\\"relative w-full max-w-5xl mx-auto pt-28 pb-20\\">\\n    <div class=\\"relative flex flex-row justify-between items-center mb-5\\">\\n      <h3>\\n        This Week\'s Totals & Averages -\\n        {format(startOfWeek(new Date(), { weekStartsOn: 1 }), \\"MMM d\\")}\\n        - {format(\\n          new Date(endOfWeek(new Date(), { weekStartsOn: 1 })),\\n          \\"MMM d\\"\\n        )}\\n      </h3>\\n      {#if !showAddShiftForm}\\n        <button\\n          in:fade={{ delay: 100, duration: 200 }}\\n          on:click={() => (showAddShiftForm = true)}>Add Shift</button\\n        >\\n      {/if}\\n      {#if showAddShiftForm}\\n        <AddShiftForm\\n          on:cancelAddShift={() => (showAddShiftForm = false)}\\n          on:addShift={handleAddShift}\\n          {miles}\\n          {milesPerGallon}\\n          {gasPrice}\\n          {grossEarned}\\n          {shiftLength}\\n        />\\n      {/if}\\n    </div>\\n\\n    <div class=\\"grid grid-cols-5 gap-3 mb-5\\">\\n      <StatBox title=\\"Miles\\" value={totalMiles > 0 ? totalMiles : 0} />\\n      <StatBox\\n        title=\\"MPG\\"\\n        value={averageMilesPerGallon > 0 ? averageMilesPerGallon : 0}\\n      />\\n      <StatBox\\n        title=\\"Gas Cost\\"\\n        value={totalGasCost > 0 ? totalGasCost : 0.0}\\n        isDollarValue\\n      />\\n      <StatBox\\n        title=\\"Gross Earned\\"\\n        value={totalGrossEarned > 0 ? totalGrossEarned : 0.0}\\n        isDollarValue\\n      />\\n      <StatBox\\n        title=\\"Net per Hour\\"\\n        value={averageNetPerHour > 0 ? averageNetPerHour : 0.0}\\n        isDollarValue\\n      />\\n    </div>\\n\\n    <h3>This Week\'s Shifts</h3>\\n\\n    {#each $currentWeekShifts as shift, i}\\n      <ShiftDetail {shift} />\\n    {/each}\\n  </div>\\n</div>\\n\\n<style>h3{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.5rem;font-weight:300;line-height:2rem;padding-bottom:.75rem;padding-top:.75rem;position:relative}.page{background-color:#0b0c10}button{background-color:#66fcf1;border-color:#66fcf1;border-radius:.25rem;border-width:1px;color:#1f2833;font-size:.875rem;font-weight:500;line-height:1.25rem;padding:.5rem 1.5rem;position:relative}button:focus{outline:2px solid transparent;outline-offset:2px}canvas{background-color:#fff;width:100%}.item{background-color:#1f2833;border-color:#1f2833}</style>\\n"],"names":[],"mappings":"AA4OO,iBAAE,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,MAAM,CAAC,YAAY,GAAG,CAAC,YAAY,IAAI,CAAC,eAAe,MAAM,CAAC,YAAY,MAAM,CAAC,SAAS,QAAQ,CAAC,oBAAK,CAAC,iBAAiB,OAAO,CAAC,qBAAM,CAAC,iBAAiB,OAAO,CAAC,aAAa,OAAO,CAAC,cAAc,MAAM,CAAC,aAAa,GAAG,CAAC,MAAM,OAAO,CAAC,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,QAAQ,KAAK,CAAC,MAAM,CAAC,SAAS,QAAQ,CAAC,qBAAM,MAAM,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,GAAG,CAAC"}'
};
async function load$2({session: session2}) {
  const {user} = session2;
  if (!user) {
    return {status: 302, redirect: "/login"};
  }
  return {};
}
const Dashboard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let totalMiles;
  let mpgs;
  let averageMilesPerGallon;
  let totalGasCost;
  let totalGrossEarned;
  let net;
  let averageNetPerHour;
  let $session, $$unsubscribe_session;
  let $currentWeekShifts, $$unsubscribe_currentWeekShifts;
  $$unsubscribe_session = subscribe(session, (value) => $session = value);
  $$unsubscribe_currentWeekShifts = subscribe(customCurrentWeekShiftsStore, (value) => $currentWeekShifts = value);
  let shiftArray = [];
  let shiftMiles = [];
  let shiftMpgs = [];
  let shiftGasCost = [];
  let shiftGrossEarned = [];
  let shiftNetPerHour = [];
  $session.user;
  onMount(async () => {
    const currentWeekStart = format(startOfWeek(new Date(), {weekStartsOn: 1}), "T");
    const currentWeekEnd = format(endOfWeek(new Date(), {weekStartsOn: 1}), "T");
    console.log("Week: ", currentWeekStart, currentWeekEnd);
    console.log("User: ", $session.user);
    const db = await getFirestore();
    const q = await query(collection(db, "shifts"), where("user", "==", $session.user, "&&", "`shiftDate`", ">=", `${currentWeekStart}`, "&&", "shiftDate", "<=", `${currentWeekEnd}`));
    const querySnapshot = await getDocs(q);
    querySnapshot.forEach((doc) => {
      console.log("Doc 1: ", doc.data());
      const newShift = doc.data();
      shiftArray = [...shiftArray, newShift];
      shiftArray = shiftArray;
    });
    customCurrentWeekShiftsStore.setCurrentWeekShifts(shiftArray);
  });
  $$result.css.add(css$4);
  {
    {
      shiftMiles = [];
      $currentWeekShifts.forEach((s) => {
        shiftMiles = [...shiftMiles, parseFloat(s.miles)];
        shiftMiles = shiftMiles;
      });
    }
  }
  totalMiles = shiftMiles.reduce((a, b) => a + b, 0);
  {
    {
      shiftMpgs = [];
      $currentWeekShifts.forEach((s) => {
        shiftMpgs = [...shiftMpgs, parseFloat(s.milesPerGallon)];
        shiftMpgs = shiftMpgs;
      });
    }
  }
  mpgs = shiftMpgs.reduce((a, b) => a + b, 0);
  averageMilesPerGallon = (mpgs / shiftMpgs.length).toFixed(1);
  {
    {
      shiftGasCost = [];
      $currentWeekShifts.forEach((s) => {
        shiftGasCost = [...shiftGasCost, s.gasCost];
        shiftGasCost = shiftGasCost;
      });
    }
  }
  totalGasCost = shiftGasCost.reduce((a, b) => a + b, 0).toFixed(2);
  {
    {
      shiftGrossEarned = [];
      $currentWeekShifts.forEach((s) => {
        shiftGrossEarned = [...shiftGrossEarned, parseFloat(s.grossEarned)];
        shiftGrossEarned = shiftGrossEarned;
      });
    }
  }
  totalGrossEarned = shiftGrossEarned.reduce((a, b) => a + b, 0).toFixed(2);
  {
    {
      shiftNetPerHour = [];
      $currentWeekShifts.forEach((s) => {
        shiftNetPerHour = [...shiftNetPerHour, parseFloat(s.netPerHour)];
        shiftNetPerHour = shiftNetPerHour;
      });
    }
  }
  net = shiftNetPerHour.reduce((a, b) => a + b, 0);
  averageNetPerHour = (net / shiftNetPerHour.length).toFixed(2);
  $$unsubscribe_session();
  $$unsubscribe_currentWeekShifts();
  return `<div class="${"page relative h-screen svelte-1wmwb3s"}"><div class="${"relative w-full max-w-5xl mx-auto pt-28 pb-20"}"><div class="${"relative flex flex-row justify-between items-center mb-5"}"><h3 class="${"svelte-1wmwb3s"}">This Week&#39;s Totals &amp; Averages -
        ${escape(format(startOfWeek(new Date(), {weekStartsOn: 1}), "MMM d"))}
        - ${escape(format(new Date(endOfWeek(new Date(), {weekStartsOn: 1})), "MMM d"))}</h3>
      ${`<button class="${"svelte-1wmwb3s"}">Add Shift</button>`}
      ${``}</div>

    <div class="${"grid grid-cols-5 gap-3 mb-5"}">${validate_component(StatBox, "StatBox").$$render($$result, {
    title: "Miles",
    value: totalMiles > 0 ? totalMiles : 0
  }, {}, {})}
      ${validate_component(StatBox, "StatBox").$$render($$result, {
    title: "MPG",
    value: averageMilesPerGallon > 0 ? averageMilesPerGallon : 0
  }, {}, {})}
      ${validate_component(StatBox, "StatBox").$$render($$result, {
    title: "Gas Cost",
    value: totalGasCost > 0 ? totalGasCost : 0,
    isDollarValue: true
  }, {}, {})}
      ${validate_component(StatBox, "StatBox").$$render($$result, {
    title: "Gross Earned",
    value: totalGrossEarned > 0 ? totalGrossEarned : 0,
    isDollarValue: true
  }, {}, {})}
      ${validate_component(StatBox, "StatBox").$$render($$result, {
    title: "Net per Hour",
    value: averageNetPerHour > 0 ? averageNetPerHour : 0,
    isDollarValue: true
  }, {}, {})}</div>

    <h3 class="${"svelte-1wmwb3s"}">This Week&#39;s Shifts</h3>

    ${each($currentWeekShifts, (shift, i) => `${validate_component(ShiftDetail, "ShiftDetail").$$render($$result, {shift}, {}, {})}`)}</div>
</div>`;
});
var index$2 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Dashboard,
  load: load$2
});
var Register_svelte_svelte_type_style_lang = "h3.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.875rem;line-height:2.25rem;margin-bottom:1.5rem;text-align:center;text-transform:uppercase}h3.svelte-1x396nc,input.svelte-1x396nc{font-weight:300}input.svelte-1x396nc{background-color:transparent;border-color:#c5c6c7;border-radius:9999px;border-width:1px;color:#fff;font-size:1rem;line-height:1.5rem;padding:.75rem 1.25rem;width:100%}input.svelte-1x396nc:focus{outline:none}button.svelte-1x396nc{background-color:#66fcf1;border:1px solid #66fcf1;border-radius:9999px;color:#1f2833;font-weight:700;padding:.75rem 2rem;width:100%}p.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:300;line-height:1.25rem;margin-top:1rem;text-align:center}.form_container.svelte-1x396nc{background-color:#1f2833}.form_link.svelte-1x396nc{color:#45a29e}.form_link.svelte-1x396nc:hover{text-decoration:underline}";
const css$3 = {
  code: "h3.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.875rem;line-height:2.25rem;margin-bottom:1.5rem;text-align:center;text-transform:uppercase}h3.svelte-1x396nc,input.svelte-1x396nc{font-weight:300}input.svelte-1x396nc{background-color:transparent;border-color:#c5c6c7;border-radius:9999px;border-width:1px;color:#fff;font-size:1rem;line-height:1.5rem;padding:.75rem 1.25rem;width:100%}input.svelte-1x396nc:focus{outline:none}button.svelte-1x396nc{background-color:#66fcf1;border:1px solid #66fcf1;border-radius:9999px;color:#1f2833;font-weight:700;padding:.75rem 2rem;width:100%}p.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:300;line-height:1.25rem;margin-top:1rem;text-align:center}.form_container.svelte-1x396nc{background-color:#1f2833}.form_link.svelte-1x396nc{color:#45a29e}.form_link.svelte-1x396nc:hover{text-decoration:underline}",
  map: '{"version":3,"file":"Register.svelte","sources":["Register.svelte"],"sourcesContent":["<script>\\n  import { createEventDispatcher } from \\"svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  // Props\\n  export let email, password, confirmPassword, confirmPasswordInput;\\n</script>\\n\\n<div class=\\"w-full max-w-sm mx-auto mb-20\\">\\n  <div class=\\"form_container p-10 rounded-xl\\">\\n    <h3>Register</h3>\\n    <form\\n      on:submit|preventDefault={() => dispatch(\\"register\\", { email, password })}\\n    >\\n      <div class=\\"mb-3\\">\\n        <input type=\\"email\\" bind:value={email} placeholder=\\"Add your email\\" />\\n      </div>\\n      <div class=\\"mb-3\\">\\n        <input\\n          type=\\"password\\"\\n          bind:value={password}\\n          placeholder=\\"Add a password\\"\\n        />\\n      </div>\\n      <div class=\\"mb-3\\">\\n        <input\\n          type=\\"password\\"\\n          bind:this={confirmPasswordInput}\\n          bind:value={confirmPassword}\\n          placeholder=\\"Confirm your password\\"\\n        />\\n      </div>\\n      <button type=\\"submit\\">Register</button>\\n    </form>\\n    <p>Already have an account? <a href=\\"login\\" class=\\"form_link\\">Login</a></p>\\n  </div>\\n</div>\\n\\n<style>h3{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.875rem;line-height:2.25rem;margin-bottom:1.5rem;text-align:center;text-transform:uppercase}h3,input{font-weight:300}input{background-color:transparent;border-color:#c5c6c7;border-radius:9999px;border-width:1px;color:#fff;font-size:1rem;line-height:1.5rem;padding:.75rem 1.25rem;width:100%}input:focus{outline:none}button{background-color:#66fcf1;border:1px solid #66fcf1;border-radius:9999px;color:#1f2833;font-weight:700;padding:.75rem 2rem;width:100%}p{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:300;line-height:1.25rem;margin-top:1rem;text-align:center}.form_container{background-color:#1f2833}.form_link{color:#45a29e}.form_link:hover{text-decoration:underline}</style>\\n"],"names":[],"mappings":"AAuCO,iBAAE,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,QAAQ,CAAC,YAAY,OAAO,CAAC,cAAc,MAAM,CAAC,WAAW,MAAM,CAAC,eAAe,SAAS,CAAC,iBAAE,CAAC,oBAAK,CAAC,YAAY,GAAG,CAAC,oBAAK,CAAC,iBAAiB,WAAW,CAAC,aAAa,OAAO,CAAC,cAAc,MAAM,CAAC,aAAa,GAAG,CAAC,MAAM,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY,MAAM,CAAC,QAAQ,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,oBAAK,MAAM,CAAC,QAAQ,IAAI,CAAC,qBAAM,CAAC,iBAAiB,OAAO,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,MAAM,CAAC,MAAM,OAAO,CAAC,YAAY,GAAG,CAAC,QAAQ,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,WAAW,IAAI,CAAC,WAAW,MAAM,CAAC,8BAAe,CAAC,iBAAiB,OAAO,CAAC,yBAAU,CAAC,MAAM,OAAO,CAAC,yBAAU,MAAM,CAAC,gBAAgB,SAAS,CAAC"}'
};
const Register = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  createEventDispatcher();
  let {email} = $$props, {password} = $$props, {confirmPassword} = $$props, {confirmPasswordInput} = $$props;
  if ($$props.email === void 0 && $$bindings.email && email !== void 0)
    $$bindings.email(email);
  if ($$props.password === void 0 && $$bindings.password && password !== void 0)
    $$bindings.password(password);
  if ($$props.confirmPassword === void 0 && $$bindings.confirmPassword && confirmPassword !== void 0)
    $$bindings.confirmPassword(confirmPassword);
  if ($$props.confirmPasswordInput === void 0 && $$bindings.confirmPasswordInput && confirmPasswordInput !== void 0)
    $$bindings.confirmPasswordInput(confirmPasswordInput);
  $$result.css.add(css$3);
  return `<div class="${"w-full max-w-sm mx-auto mb-20"}"><div class="${"form_container p-10 rounded-xl svelte-1x396nc"}"><h3 class="${"svelte-1x396nc"}">Register</h3>
    <form><div class="${"mb-3"}"><input type="${"email"}" placeholder="${"Add your email"}" class="${"svelte-1x396nc"}"${add_attribute("value", email, 1)}></div>
      <div class="${"mb-3"}"><input type="${"password"}" placeholder="${"Add a password"}" class="${"svelte-1x396nc"}"${add_attribute("value", password, 1)}></div>
      <div class="${"mb-3"}"><input type="${"password"}" placeholder="${"Confirm your password"}" class="${"svelte-1x396nc"}"${add_attribute("this", confirmPasswordInput, 1)}${add_attribute("value", confirmPassword, 1)}></div>
      <button type="${"submit"}" class="${"svelte-1x396nc"}">Register</button></form>
    <p class="${"svelte-1x396nc"}">Already have an account? <a href="${"login"}" class="${"form_link svelte-1x396nc"}">Login</a></p></div>
</div>`;
});
var index_svelte_svelte_type_style_lang$1 = ".page.svelte-1gu0xuj{background-color:#0b0c10}";
const css$2 = {
  code: ".page.svelte-1gu0xuj{background-color:#0b0c10}",
  map: '{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n  export async function load({ session }) {\\n    const { user } = session;\\n    if (user) {\\n      return {\\n        status: 302,\\n        redirect: \\"/dashboard\\",\\n      };\\n    }\\n    return {};\\n  }\\n</script>\\n\\n<script>\\n  import { goto } from \\"$app/navigation\\";\\n  import { session } from \\"$app/stores\\";\\n  import { collection, addDoc, getFirestore } from \\"firebase/firestore\\";\\n  import { getAuth, createUserWithEmailAndPassword } from \\"firebase/auth\\";\\n\\n  // Components\\n  import Register from \\"$lib/components/Register.svelte\\";\\n\\n  // Vars\\n  let email, password, confirmPassword;\\n  let validPassword = null;\\n  let confirmPasswordInput;\\n\\n  let currentUser;\\n  let userId;\\n\\n  // Functions\\n  function validatePassword() {\\n    if (password !== confirmPassword) {\\n      validPassword = false;\\n    } else {\\n      validPassword = true;\\n    }\\n  }\\n\\n  async function handleRegister(event) {\\n    event.preventDefault();\\n    validatePassword();\\n\\n    if (!validPassword) {\\n      confirmPassword = \\"\\";\\n      // setTimeout(() => {\\n      //   confirmPasswordInput.focus();\\n      // }, 200);\\n      // return;\\n    }\\n\\n    password = event.detail.password;\\n    email = event.detail.email;\\n\\n    try {\\n      const auth = getAuth();\\n      await createUserWithEmailAndPassword(auth, email, password).then(\\n        (res) => {\\n          console.log(\\"Res\\", res);\\n          $session.user = res.user.uid;\\n          console.log(\\"Ses: \\", $session.user);\\n        }\\n      );\\n      goto(\\"dashboard\\");\\n    } catch (err) {\\n      let message = err.message || err;\\n      console.log(message);\\n    }\\n\\n    try {\\n      const userData = {\\n        userId: `${$session.user}`,\\n      };\\n      const db = await getFirestore();\\n      const docRef = await addDoc(collection(db, \\"users\\"), { userData });\\n      console.log(docRef.id);\\n    } catch (err) {\\n      console.log(err);\\n    }\\n  }\\n</script>\\n\\n<div class=\\"page w-full h-screen flex justify-center items-center\\">\\n  <Register\\n    {email}\\n    {password}\\n    {confirmPassword}\\n    {confirmPasswordInput}\\n    on:register={handleRegister}\\n  />\\n</div>\\n\\n<style>.page{background-color:#0b0c10}</style>\\n"],"names":[],"mappings":"AA4FO,oBAAK,CAAC,iBAAiB,OAAO,CAAC"}'
};
async function load$1({session: session2}) {
  const {user} = session2;
  if (user) {
    return {status: 302, redirect: "/dashboard"};
  }
  return {};
}
const Register_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_session;
  $$unsubscribe_session = subscribe(session, (value) => value);
  let email, password, confirmPassword;
  let confirmPasswordInput;
  $$result.css.add(css$2);
  $$unsubscribe_session();
  return `<div class="${"page w-full h-screen flex justify-center items-center svelte-1gu0xuj"}">${validate_component(Register, "Register").$$render($$result, {
    email,
    password,
    confirmPassword,
    confirmPasswordInput
  }, {}, {})}
</div>`;
});
var index$1 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Register_1,
  load: load$1
});
var Login_svelte_svelte_type_style_lang = "h3.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.875rem;line-height:2.25rem;margin-bottom:1.5rem;text-align:center;text-transform:uppercase}h3.svelte-1x396nc,input.svelte-1x396nc{font-weight:300}input.svelte-1x396nc{background-color:transparent;border-color:#c5c6c7;border-radius:9999px;border-width:1px;color:#fff;font-size:1rem;line-height:1.5rem;padding:.75rem 1.25rem;width:100%}input.svelte-1x396nc:focus{outline:none}button.svelte-1x396nc{background-color:#66fcf1;border:1px solid #66fcf1;border-radius:9999px;color:#1f2833;font-weight:700;padding:.75rem 2rem;width:100%}p.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:300;line-height:1.25rem;margin-top:1rem;text-align:center}.form_container.svelte-1x396nc{background-color:#1f2833}.form_link.svelte-1x396nc{color:#45a29e}.form_link.svelte-1x396nc:hover{text-decoration:underline}";
const css$1 = {
  code: "h3.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.875rem;line-height:2.25rem;margin-bottom:1.5rem;text-align:center;text-transform:uppercase}h3.svelte-1x396nc,input.svelte-1x396nc{font-weight:300}input.svelte-1x396nc{background-color:transparent;border-color:#c5c6c7;border-radius:9999px;border-width:1px;color:#fff;font-size:1rem;line-height:1.5rem;padding:.75rem 1.25rem;width:100%}input.svelte-1x396nc:focus{outline:none}button.svelte-1x396nc{background-color:#66fcf1;border:1px solid #66fcf1;border-radius:9999px;color:#1f2833;font-weight:700;padding:.75rem 2rem;width:100%}p.svelte-1x396nc{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:300;line-height:1.25rem;margin-top:1rem;text-align:center}.form_container.svelte-1x396nc{background-color:#1f2833}.form_link.svelte-1x396nc{color:#45a29e}.form_link.svelte-1x396nc:hover{text-decoration:underline}",
  map: `{"version":3,"file":"Login.svelte","sources":["Login.svelte"],"sourcesContent":["<script>\\n  import { createEventDispatcher } from \\"svelte\\";\\n\\n  const dispatch = createEventDispatcher();\\n\\n  // Props\\n  export let email, password;\\n</script>\\n\\n<div class=\\"w-full max-w-sm mx-auto mb-20\\">\\n  <div class=\\"form_container px-10 py-10 rounded-xl\\">\\n    <h3>Sign In</h3>\\n    <form\\n      on:submit|preventDefault={() => dispatch(\\"login\\", { email, password })}\\n    >\\n      <div class=\\"mb-4\\">\\n        <input type=\\"email\\" bind:value={email} placeholder=\\"Add your email\\" />\\n      </div>\\n      <div class=\\"mb-4\\">\\n        <input\\n          type=\\"password\\"\\n          bind:value={password}\\n          placeholder=\\"Add a password\\"\\n        />\\n      </div>\\n      <button type=\\"submit\\" class=\\"focus:outline-none\\">Sign In</button>\\n    </form>\\n    <p>\\n      Don't have an account? <a href=\\"register\\" class=\\"form_link\\">Register</a>\\n    </p>\\n  </div>\\n</div>\\n\\n<style>h3{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:1.875rem;line-height:2.25rem;margin-bottom:1.5rem;text-align:center;text-transform:uppercase}h3,input{font-weight:300}input{background-color:transparent;border-color:#c5c6c7;border-radius:9999px;border-width:1px;color:#fff;font-size:1rem;line-height:1.5rem;padding:.75rem 1.25rem;width:100%}input:focus{outline:none}button{background-color:#66fcf1;border:1px solid #66fcf1;border-radius:9999px;color:#1f2833;font-weight:700;padding:.75rem 2rem;width:100%}p{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity));font-size:.875rem;font-weight:300;line-height:1.25rem;margin-top:1rem;text-align:center}.form_container{background-color:#1f2833}.form_link{color:#45a29e}.form_link:hover{text-decoration:underline}</style>\\n"],"names":[],"mappings":"AAiCO,iBAAE,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,QAAQ,CAAC,YAAY,OAAO,CAAC,cAAc,MAAM,CAAC,WAAW,MAAM,CAAC,eAAe,SAAS,CAAC,iBAAE,CAAC,oBAAK,CAAC,YAAY,GAAG,CAAC,oBAAK,CAAC,iBAAiB,WAAW,CAAC,aAAa,OAAO,CAAC,cAAc,MAAM,CAAC,aAAa,GAAG,CAAC,MAAM,IAAI,CAAC,UAAU,IAAI,CAAC,YAAY,MAAM,CAAC,QAAQ,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,oBAAK,MAAM,CAAC,QAAQ,IAAI,CAAC,qBAAM,CAAC,iBAAiB,OAAO,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,MAAM,CAAC,MAAM,OAAO,CAAC,YAAY,GAAG,CAAC,QAAQ,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,UAAU,OAAO,CAAC,YAAY,GAAG,CAAC,YAAY,OAAO,CAAC,WAAW,IAAI,CAAC,WAAW,MAAM,CAAC,8BAAe,CAAC,iBAAiB,OAAO,CAAC,yBAAU,CAAC,MAAM,OAAO,CAAC,yBAAU,MAAM,CAAC,gBAAgB,SAAS,CAAC"}`
};
const Login = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  createEventDispatcher();
  let {email} = $$props, {password} = $$props;
  if ($$props.email === void 0 && $$bindings.email && email !== void 0)
    $$bindings.email(email);
  if ($$props.password === void 0 && $$bindings.password && password !== void 0)
    $$bindings.password(password);
  $$result.css.add(css$1);
  return `<div class="${"w-full max-w-sm mx-auto mb-20"}"><div class="${"form_container px-10 py-10 rounded-xl svelte-1x396nc"}"><h3 class="${"svelte-1x396nc"}">Sign In</h3>
    <form><div class="${"mb-4"}"><input type="${"email"}" placeholder="${"Add your email"}" class="${"svelte-1x396nc"}"${add_attribute("value", email, 1)}></div>
      <div class="${"mb-4"}"><input type="${"password"}" placeholder="${"Add a password"}" class="${"svelte-1x396nc"}"${add_attribute("value", password, 1)}></div>
      <button type="${"submit"}" class="${"focus:outline-none svelte-1x396nc"}">Sign In</button></form>
    <p class="${"svelte-1x396nc"}">Don&#39;t have an account? <a href="${"register"}" class="${"form_link svelte-1x396nc"}">Register</a></p></div>
</div>`;
});
var index_svelte_svelte_type_style_lang = ".page.svelte-1gu0xuj{background-color:#0b0c10}";
const css = {
  code: ".page.svelte-1gu0xuj{background-color:#0b0c10}",
  map: '{"version":3,"file":"index.svelte","sources":["index.svelte"],"sourcesContent":["<script context=\\"module\\">\\n  export async function load({ session }) {\\n    const { user } = session;\\n    if (user) {\\n      return {\\n        status: 302,\\n        redirect: \\"/dashboard\\",\\n      };\\n    }\\n    return {};\\n  }\\n</script>\\n\\n<script>\\n  import { goto } from \\"$app/navigation\\";\\n  import { session } from \\"$app/stores\\";\\n  import { getAuth, signInWithEmailAndPassword } from \\"firebase/auth\\";\\n\\n  // Components\\n  import Login from \\"$lib/components/Login.svelte\\";\\n\\n  // Vars\\n  let email,\\n    password = \\"\\";\\n\\n  // Functions\\n  async function handleLogin(event) {\\n    event.preventDefault();\\n\\n    email = event.detail.email;\\n    password = event.detail.password;\\n\\n    try {\\n      const auth = await getAuth();\\n      await signInWithEmailAndPassword(auth, email, password).then((res) => {\\n        $session.user = res.user.uid;\\n        goto(\\"dashboard\\");\\n      });\\n    } catch (err) {\\n      const errorCode = err.code;\\n      const errorMessage = err.message;\\n    }\\n  }\\n</script>\\n\\n<div class=\\"page w-full h-screen flex justify-center items-center\\">\\n  <Login {email} {password} on:login={handleLogin} />\\n</div>\\n\\n<style>.page{background-color:#0b0c10}</style>\\n"],"names":[],"mappings":"AAiDO,oBAAK,CAAC,iBAAiB,OAAO,CAAC"}'
};
async function load({session: session2}) {
  const {user} = session2;
  if (user) {
    return {status: 302, redirect: "/dashboard"};
  }
  return {};
}
const Login_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_session;
  $$unsubscribe_session = subscribe(session, (value) => value);
  let email, password = "";
  $$result.css.add(css);
  $$unsubscribe_session();
  return `<div class="${"page w-full h-screen flex justify-center items-center svelte-1gu0xuj"}">${validate_component(Login, "Login").$$render($$result, {email, password}, {}, {})}
</div>`;
});
var index = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  [Symbol.toStringTag]: "Module",
  default: Login_1,
  load
});
export {init, render};
